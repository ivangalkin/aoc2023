#include <iostream>
#include <vector>
#include <array>
#include <set>
#include <iomanip>
#include <sstream>
#include <map>
#include <tuple>
#include <numeric>
#include <algorithm>

#ifdef NDEBUG
#undef NDEBUG
#endif

#include <assert.h>

#define ASSERT_EQ(a, b) \
   do { __typeof__ (a) _a = (a); \
       __typeof__ (b) _b = (b); \
     if (_a != _b)       \
     {                 \
       std::cout << _a << " != " << _b << std::endl; \
       assert(0);                  \
     }                  \
     }while(0)

#define myprint(arg) do { std::cout << "" #arg << " = " << arg << std::endl; } while(0)

using ll = int64_t;

namespace {

    std::vector<std::vector<std::string>> input_real{

            {"##.####.######.##",
                    ".#.#..#.#....#.#.",
                    "...#..#...##...#.",
                    "###....########..",
                    "#..#..#..####..#.",
                    ".#.#..#.#.##.#.#.",
                    "...####...##...##",
                    "..##..##......##.",
                    "##.#..#.######.#.",
                    "..#....#....#.#..",
                    "..#....#......#..",
                    "#...##...####...#",
                    "#.######.####.###",
                    "..##..##......##.",
                    "#........####....",
            },
            {
             ".##......",
                    "###.####.",
                    "##.##...#",
                    "..###..##",
                    "...##..##",
                    "#..#.##.#",
                    "..#......",
                    ".##..##..",
                    ".##..##..",
            },
            {
             ".......####..##..",
                    ".####.##.#.#....#",
                    ".####...#.#.####.",
                    "######.##.#######",
                    "........#..#....#",
                    ".####....########",
                    "......###.###..##",
                    "#....##.###......",
                    ".####...#.###..##",
                    "#....####.##....#",
                    "........##..#####",
                    "##..##.####.####.",
                    "######..#....##..",
                    "#....#..####....#",
                    ".####.##.#.######",
            },
            {
             "..####...####",
                    "..####...####",
                    "#...###...###",
                    "...##########",
                    "#.#..#..##.##",
                    "#.#.##.#..#..",
                    ".#.#..##..#..",
                    "##..###....##",
                    "#.###...##.#.",
            },
            {
             "#....##..",
                    "#.###..##",
                    "##...##..",
                    "#..######",
                    "##.#....#",
                    "#.#......",
                    "#####..##",
                    "##.######",
                    ".#.######",
                    "##...##..",
                    "..#......",
                    ".#.##..##",
                    ".##......",
                    "#.#......",
                    "#####..##",
                    "...######",
                    ".####..##",
            },
            {
             "..##.##...###",
                    "##.#.####.#..",
                    "...#######.##",
                    "###..##.####.",
                    "#####.....###",
                    "######...###.",
                    "..##..##...##",
                    "..#..###..##.",
                    "####.##...#.#",
                    "...#.#..#..##",
                    "..##.#.#.####",
                    "###..###....#",
                    "###....#.####",
                    "..##.##.##...",
                    "..##.##..#...",
            },
            {
             "....#...####..#",
                    ".###.....####.#",
                    "###.#.##..#.#..",
                    "#.#.######...#.",
                    "#.#####.#..#.#.",
                    "...#......#.##.",
                    "####....#......",
                    "#.#..#..#####.#",
                    "##..#.##...#.##",
                    "...#.#.###.###.",
                    "..####.##...#.#",
                    "..####.##...#.#",
                    "...#.#..##.###.",
                    "...#.#..##.###.",
                    "..####.##...#.#",
                    "..####.##...#.#",
                    "...#.#.###.###.",
            },
            {
             "#...#...#...##.#.",
                    "....#...#...##.#.",
                    "..##.###.##..###.",
                    "#.#.#.#.#.###..#.",
                    "......##.#.#.##.#",
                    ".#..#..#...#..#..",
                    "##.##.....####..#",
                    "####.##...#.###..",
                    "####.##...#.###..",
                    "##.##.....####..#",
                    ".#..#..#...#..#..",
                    "......##.#.#.##.#",
                    "#.#.#.#.#.###..#.",
            },
            {
             "..##....#.#.##.#.",
                    "..#......#..#.#..",
                    "##.###.#..##..##.",
                    ".#.###....##.##..",
                    "#....##.#...##.##",
                    "#.#..##.#.####.##",
                    "#.#..##.#.####..#",
                    "#....##.#...##.##",
                    ".#.###....##.##..",
                    "##.###.#..##..##.",
                    "..#......#..#.#..",
                    "..##....#.#.##.#.",
                    "..##....#.#.##.#.",
            },
            {
             ".#..#.#...##.",
                    "#....#.#.....",
                    ".......##..##",
                    "......###....",
                    ".#..#.#...##.",
                    ".#..#.#......",
                    "..##..#.####.",
                    "......#..#.##",
                    "........#..#.",
                    "#....###.####",
                    "#....##..####",
            },
            {
             "#................",
                    "#...####...#..#..",
                    ".#.######.#.##.#.",
                    ".#.######.#....#.",
                    "..#.####.#..##..#",
                    "#..######..####..",
                    ".....##.....##...",
            },
            {
             "#...#.#####",
                    "##.#..#.##.",
                    "##.........",
                    "#..#...#.##",
                    "..#.##.#...",
                    "##..#.###..",
                    "##..#.###..",
            },
            {
             "...#.#...#..#.#",
                    "#....##.....#.#",
                    "..#..#..#####.#",
                    ".##....#...#...",
                    "##..........###",
                    "......#...####.",
                    "####.#.#.##.###",
                    "..#.#..##..####",
                    "..#.#..##.#####",
                    "..#.#..##.#####",
                    "..#.#..##..####",
            },
            {
             "###.#......",
                    ".#.#.##..##",
                    ".###..##...",
                    "##...######",
                    "##.#####.##",
                    "#####.#.#..",
                    "..###.##.##",
                    ".#######.##",
                    ".#.##..#...",
                    "#....#.#...",
                    ".#..####.##",
                    "##.###..#..",
                    "##.#.##...#",
                    "#.##.##....",
                    "..##.#.#...",
                    ".#..#.##.##",
                    ".#..#.##.##",
            },
            {
             ".......##....",
                    "..#.#..##..#.",
                    "..#....##....",
                    "..#..##..##..",
                    "...##......##",
                    "..#..##..##..",
                    "##.###....###",
                    "......#..#...",
                    "#######..###.",
            },
            {
             "####..##.",
                    ".#..#...#",
                    "###..####",
                    "###..#.##",
                    ".#..#...#",
                    "####..##.",
                    "#####.#..",
                    ".#.#...#.",
                    ".####.#.#",
                    "#.#.#...#",
                    "..##.###.",
                    "##..##..#",
                    "...#.###.",
                    "...#.###.",
                    "##..##..#",
            },
            {
             "#.###..####",
                    ".#..##...##",
                    "##.##.#.#..",
                    ".#..#...###",
                    ".##..#..###",
                    "####.##.###",
                    "####.#..###",
            },
            {
             "#######..##",
                    "######....#",
                    ".####......",
                    "#....#.##.#",
                    "######....#",
                    "#....##..##",
                    "#######..##",
                    ".####......",
                    ".........#.",
                    ".####......",
                    ".####.#..#.",
                    "#.##.######",
                    "######.##.#",
                    "##..##.##.#",
                    "..##..####.",
                    "#....#.##.#",
                    ".####......",
            },
            {
             "#.#..#..##.",
                    "#####.###..",
                    "##.##.##...",
                    "##.##.##...",
                    "#####.###..",
                    "#.#..#..##.",
                    "###...#.#.#",
                    ".#.#....###",
                    ".#.#....###",
                    "###...#...#",
                    "#.#..#..##.",
            },
            {
             "#####.#..#.",
                    "#.###.####.",
                    "#..###.##.#",
                    ".##.###..##",
                    "....#..##..",
                    "#..##.#..#.",
                    "......####.",
            },
            {
             "##.#.######",
                    ".#.#.#.##.#",
                    "..###.##.#.",
                    "##..#######",
                    "#.##.######",
                    ".####......",
                    "..#....##..",
                    "#.###......",
                    ".#..#.####.",
                    "..#..#....#",
                    ".#.###....#",
                    ".#.###....#",
                    "..#..#....#",
            },
            {
             "##.#.####.#.###",
                    ".##...##...##..",
                    ".############..",
                    "...########...#",
                    "#....#..#....##",
                    "....#....#.....",
                    "..#.#.##.#.#...",
            },
            {
             ".#.#...#..#...#.#",
                    ".#.#...#..#...#.#",
                    "###.###.##.###.##",
                    "#....##....##....",
                    "#.#..##.##.##..#.",
                    "#.#.###....#####.",
                    "###.##########.##",
                    "#..#.#.#..#.#.#..",
                    "#.#...#.##.#...#.",
                    "..##.#.####.#.##.",
                    "#####.######.####",
            },
            {
             ".#..####..#..#.",
                    ".##.#...#.#...#",
                    "##.####.###.###",
                    ".#.#####..####.",
                    "..##..##..#.###",
                    "..##..##..#.###",
                    ".#.#####..####.",
                    "##.####.###.###",
                    ".##.#...#.#...#",
                    ".#..####..#..#.",
                    ".#.###..#######",
                    "##.##.####.#...",
                    "##.##.####.#...",
                    ".#.###..#######",
                    ".#..####..#..#.",
                    ".##.....#.#...#",
                    "##.####.###.###",
            },
            {
             ".##.##..##.",
                    "....######.",
                    "#####....##",
                    "....#.##.#.",
                    ".##.##.###.",
                    "#..#......#",
                    "#..##....##",
                    ".##.######.",
                    ".##.##..##.",
                    "....##..##.",
                    "#..###..###",
                    ".##.#....#.",
                    "....#....#.",
                    "....#.##.#.",
                    "######..###",
            },
            {
             "#.#.###",
                    "...#...",
                    "...#..#",
                    "#.#.#.#",
                    "##..#.#",
                    "###.#.#",
                    "#.#.#.#",
                    "...#..#",
                    "...#...",
                    "#.#.###",
                    "######.",
                    "..#####",
                    "#.##.##",
                    "#.##.##",
                    "..#####",
            },
            {
             "....#.#..",
                    "....#.#..",
                    ".##.#####",
                    "###......",
                    "#.#..####",
                    "#........",
                    "#...#..##",
                    ".###...##",
                    ".#.....##",
                    "#...#..##",
                    "#.###.#..",
                    "#..#.#...",
                    "..##.###.",
                    "##.###.##",
                    ".###.####",
                    "...##.###",
                    "#..####..",
            },
            {
             "#.#.#..",
                    "#.#.#..",
                    "##..#..",
                    "####...",
                    "....###",
                    "..#..##",
                    ".#####.",
                    ".#####.",
                    "..#...#",
            },
            {
             "#.#...###.####...",
                    "######.##..#..##.",
                    ".#.#.####.#..#..#",
                    "..#..####.##...##",
                    "..###.#....##...#",
                    "..###.#....##...#",
                    "..#..####.##...##",
                    ".#.#.####.#..#..#",
                    "######.##..#..##.",
                    "#.#...###.####...",
                    "..####...##.##.#.",
                    "##..#...#.#..#...",
                    "#.###....##...#..",
                    ".#.##.#..#.#.#...",
                    "##.#.#..##.##.##.",
                    "##.###.....##.#..",
                    "##.####....##.#..",
            },
            {
             "###..######..##",
                    "........###..##",
                    "##.##.###.####.",
                    "##....##..#..#.",
                    "#..##..#.......",
                    "#..#...#..####.",
                    ".#.##.#.#..##..",
                    "..####..#.#..#.",
                    ".######........",
                    "#.####.##.#..#.",
                    "##########....#",
                    ".######.#......",
                    ".######.#..##..",
            },
            {
             "#.#.###",
                    "..#..##",
                    "..#..##",
                    "#.#..##",
                    "..#####",
                    "....###",
                    ".######",
                    ".##..##",
                    ".###.##",
                    "##.#...",
                    "##..#..",
            },
            {
             "###....#...",
                    "#.##..#.#..",
                    "..##..#.#..",
                    "###....#...",
                    "##..###.#..",
                    "...#..####.",
                    "...###.####",
                    "...###.####",
                    "...#..####.",
                    "##..###.#..",
                    "###....#...",
                    "..##..#.#..",
                    "#.##..#.#..",
                    "###....#...",
                    ".####.###..",
            },
            {
             "#.##.##.##.#..#",
                    "...#....#...##.",
                    "#..........##..",
                    ".#..####..#....",
                    "...#.##.#...#..",
                    "##.##..##.###.#",
                    "..#.####.#..##.",
                    "..##.##.##..#..",
                    "..#..##..#...##",
                    "##.##..##.###..",
                    "##.##..##.###.#",
            },
            {
             "##...#.#.#...",
                    "##.####.#.#..",
                    "#####..###.##",
                    "..#....##.#..",
                    ".#####..##.##",
                    "......##.##..",
                    "###.###.#.#..",
                    "###..######..",
                    "####.#####...",
            },
            {
             ".##.###.##.......",
                    ".#..#.....#..###.",
                    ".#.#######.##.##.",
                    "......##.##..#..#",
                    ".##.#####..#.#..#",
                    "..##.#.....#.####",
                    "#...#..##...#.##.",
                    "#.##.#####.###..#",
                    "#.##.#####.###..#",
                    "#...#..##...#.##.",
                    "..##.#.....#.####",
            },
            {
             "..#.####.#.......",
                    "...#.#..#...#....",
                    "..#.#..#.#..##..#",
                    ".##.#..#.##.#....",
                    "#.#.####.#.#.....",
                    "....####.........",
                    "..#.#..#.#..#....",
                    ".#.######.#..####",
                    "##.##..##.###....",
                    "############.....",
                    "..#..##..#...####",
                    ".###.##.###.#.##.",
                    "#.#.#..#.#.#.####",
                    ".#..####..#......",
                    ".####..####..#..#",
            },
            {
             ".#.##.#......",
                    "..####..#..##",
                    ".##..##.#..#.",
                    ".#.##.#..##..",
                    "..#..#.......",
                    "..#..#...##..",
                    "..####..#..#.",
                    "###..###....#",
                    ".#.##.#.####.",
                    "...##....##..",
                    "#.####.#....#",
            },
            {
             "..#########",
                    ".#..#.##.#.",
                    "..###....##",
                    "##.###..###",
                    "#.###...###",
                    ".#####..###",
                    "##.#......#",
                    "#.###.##.##",
                    "..#..#..#..",
                    "#.#.#.##.#.",
                    "....######.",
                    "..##......#",
                    ".##..####..",
                    ".#.#..##..#",
                    ".#.###..###",
                    "#.....##...",
                    "#.....##...",
            },
            {
             ".##....",
                    ".###...",
                    "..#....",
                    "##..##.",
                    "##..##.",
                    "..#....",
                    ".###...",
                    ".##....",
                    ".##..##",
                    ".....##",
                    "...####",
            },
            {
             ".##..##...####...",
                    ".###...#.#.#..#..",
                    "##.......###...#.",
                    "#...#..##....##.#",
                    "#.##########.##..",
                    "...######..#.##.#",
                    "#......#..#.##...",
                    "#......#..#.##...",
                    "...######..#.##.#",
                    "#.########.#.##..",
                    "#...#..##....##.#",
                    "##.......###...#.",
                    ".###...#.#.#..#..",
                    ".##..##...####...",
                    ".##..##...####...",
            },
            {
             "#........####..",
                    "#.#....#.####.#",
                    "#.#.##.#.#..#.#",
                    "#..#..#..#..#..",
                    "##......######.",
                    ".###..###....##",
                    "#...##...####..",
                    ".##....##.##.##",
                    "#.#.####.#..#.#",
            },
            {
             "###....",
                    "##.####",
                    "..#####",
                    ".#.....",
                    ".#.....",
                    "..#####",
                    "##..##.",
            },
            {
             ".#.##.#.##.#.##.#",
                    ".#.##.#.##.#.##.#",
                    "..#.#.#....#.#.#.",
                    "##...########...#",
                    "###.#...##.#.#.##",
                    ".#..#...##...#..#",
                    ".#.#..........#.#",
                    ".####.######.####",
                    "...#.#.#..#.#.#..",
            },
            {
             ".....###....#",
                    "......##.##.#",
                    "...#..##.##.#",
                    ".....###....#",
                    "##...#.######",
                    ".##.##...##..",
                    "#..###..#..#.",
                    "....#........",
                    ".#..###.#..#.",
            },
            {
             "..#.##..###.###.#",
                    "..#.##..###.###.#",
                    "###..###....#.##.",
                    "....#.####.#.###.",
                    "##.##.#..#..#.#..",
                    "###.###.#..#.####",
                    "..#.#..#.##..#.##",
                    "###....#..#.#.#.#",
                    ".#.###.#.##.#.#.#",
            },
            {
             "#....#.....#.",
                    "#.#.##..#..#.",
                    "###.##.###...",
                    ".#.##...#.###",
                    "..#..###.....",
                    ".###..#...##.",
                    "..##..#...##.",
                    "..#..###.....",
                    ".#.##...#.###",
                    "###.##.###...",
                    "#.#.##..#..#.",
                    "#....#.....#.",
                    "#....#.....#.",
            },
            {
             "#.####..#",
                    "#####.##.",
                    "...##....",
                    "...##....",
                    "#####.##.",
                    "..####..#",
                    "..###....",
                    "#...#.##.",
                    "#.##.#..#",
            },
            {
             "#..####",
                    "##..#..",
                    "..#..#.",
                    "#..####",
                    "#..###.",
                    "..#..#.",
                    "##..#..",
                    "#..####",
                    ".#..##.",
                    ".#..##.",
                    "#..####",
            },
            {
             ".#.#...##...#",
                    ".#.##......##",
                    "##...##..##..",
                    ".####.#.##.##",
                    "###.##....##.",
                    ".###..####..#",
                    "#..#........#",
                    "..#.#.#..#.#.",
                    "..#.#.#..#.#.",
            },
            {
             "###.#####",
                    "###.#.###",
                    "#.#.###..",
                    "#..##.###",
                    ".###.##..",
                    "##..#....",
                    ".......##",
                    "...######",
                    ".......##",
                    "##.##....",
                    ".#..#####",
                    ".##.#.###",
                    "#..#.....",
                    "#.#.#....",
                    "#.#..#.##",
            },
            {
             ".####.#",
                    "#....##",
                    ".#..#.#",
                    ".#..#.#",
                    "#....##",
                    ".####..",
                    "#.##.#.",
                    "#....##",
                    "#.##.#.",
                    "######.",
                    "##..##.",
            },
            {
             ".###...##",
                    ".....#.##",
                    "..#..##..",
                    "...####..",
                    "..#.##...",
                    "#.#######",
                    "#.####.##",
            },
            {
             "###..#..#..##",
                    "#..#.#..#.#..",
                    ".....####....",
                    "####.#..#.###",
                    "...#.####.#..",
                    "#..#.#..#.#..",
                    "#.....##.....",
                    "#.##########.",
                    "######..#####",
                    ".###.#..#.###",
                    ".#####..#####",
                    ".....####....",
                    "######..#####",
            },
            {
             "..#####..",
                    "..##.....",
                    "#.#...#..",
                    ".#.######",
                    ".#.#####.",
                    "..##.#.#.",
                    "..##.#.#.",
                    ".#.#####.",
                    ".#.######",
            },
            {
             "#..####",
                    "#..#..#",
                    "#..#..#",
                    ".##....",
                    "....#.#",
                    ".##.#..",
                    "######.",
                    "....#.#",
                    "....#..",
            },
            {
             "##..##.##.#..#..#",
                    "###.#.#.....#....",
                    "###.#.#.....#....",
                    "##..##.##.#..#..#",
                    "....####.....####",
                    "##.#..#.######..#",
                    ".#.#######...#..#",
                    ".##.#.#.#.#.....#",
                    "..##......#...###",
                    ".#.######.#######",
                    ".#.######.#######",
                    "..##......#...###",
                    ".##.#.#.#.#.....#",
                    ".#.#.#####...#..#",
                    "##.#..#.######..#",
                    "....####.....####",
                    "##..##.##.#..#..#",
            },
            {
             ".....#.##.##.#.",
                    ".....#..#.##.#.",
                    "#####...#.#..##",
                    ".##.#..##.#...#",
                    "#..##..##..#..#",
                    ".....###.###.##",
                    "#####.#....#.#.",
                    "#####..####..##",
                    ".##..#...#..#.#",
                    "#####..#.#.####",
                    "......##.###.#.",
                    "####.##.....###",
                    "####.###.##...#",
            },
            {
             ".############...#",
                    ".############...#",
                    "###........###.#.",
                    "####.#..#.####..#",
                    ".###..##..###.##.",
                    ".##.######.##..##",
                    "##..######..####.",
                    ".####.##.####...#",
                    ".#.#..##..#.#.##.",
                    "##..#######.##..#",
                    "#..###..###..#...",
            },
            {
             ".#...#..######.",
                    "#..#####.####.#",
                    "....#.###.##.##",
                    "#.###.##.#..#.#",
                    "#.....###.##.##",
                    "#...#.###.##.##",
                    "#.###.##.#..#.#",
            },
            {
             "#.#..#.###..#",
                    "...##.....##.",
                    ".######......",
                    "..#..#.......",
                    "#.#..#.#.####",
                    ".######.#####",
                    "###..###.#..#",
                    ".######......",
                    "#.#..####....",
                    ".#....#.#####",
                    "#..##..#.....",
                    "...##...##..#",
                    ".##..##..#..#",
            },
            {
             "###...####...",
                    "....########.",
                    "####.#.##.#.#",
                    "######.##.###",
                    "##.#.######.#",
                    "###..........",
                    "##.##########",
                    "..##...##...#",
                    "##.#.######.#",
                    "###..#.##....",
                    "..#.#.####.#.",
                    "####..####..#",
                    "##...#....#..",
                    "###..#.##.#..",
                    "###..#....#..",
                    "..#.#..##..#.",
                    "..#....##....",
            },
            {
             "..#.#..#.#..##..#",
                    "#.#......#.##..#.",
                    "..########..##...",
                    "..########..##...",
                    ".##.####.##.####.",
                    ".#..#..#..#.#.#..",
                    "...######....###.",
                    "...######....###.",
                    ".#..#..#..#.#.#..",
                    ".##.####.##..###.",
                    "..########..##...",
            },
            {
             "#..#..##......##.",
                    "#..#..##......##.",
                    "####..##......##.",
                    ".##.##.########.#",
                    "..#....#.#..#.#..",
                    ".#.#..#.##..##.##",
                    "#.#.#.##......##.",
            },
            {
             "####.##.##.##",
                    ".#####..#..##",
                    ".#....#.#.#..",
                    "..#..#.#.#.##",
                    ".#...####....",
                    "#.#.###..#.##",
                    "..####.....##",
                    "..####.....##",
                    "#.#.###..#.##",
                    ".#...####....",
                    "..#..#.#.#.##",
                    ".#....#.###..",
                    ".#####..#..##",
                    "####.##.##.##",
                    "##.#...#.....",
            },
            {
             "#..#.#...##",
                    ".##.######.",
                    "####.##.#.#",
                    ".##.##..#.#",
                    ".##.##..#.#",
                    "####.##.#..",
                    ".##.######.",
                    "#..#.#...##",
                    "####....#.#",
            },
            {
             ".....##.#",
                    ".......#.",
                    "....#.##.",
                    ".....#...",
                    ".....##.#",
                    "####..###",
                    "........#",
                    "####.....",
                    ".##.#.#..",
                    "....#####",
                    "#####.###",
                    "####...#.",
                    "....##.#.",
                    "....##.##",
                    "####.#...",
            },
            {
             ".#..#.....##.",
                    "##..##.#..##.",
                    "#.##.###.#..#",
                    "##..##.######",
                    "#.##.#....##.",
                    "#.##.#.##....",
                    "######.######",
                    ".####..#.....",
                    "..##....#####",
                    "#######.....#",
                    ".......######",
                    "######.##....",
                    "......#.##..#",
                    "#....########",
                    "##..###......",
            },
            {
             "#.#.##..#.#",
                    ".##.#....##",
                    "####.##..#.",
                    ".#..####.#.",
                    ".#..####.#.",
                    "####.##..#.",
                    ".##.#....##",
                    "#.#.###.#.#",
                    ".....####..",
                    "#.....#####",
                    "##..#.####.",
                    "#####.####.",
                    "########.#.",
                    "########.#.",
                    "#####.####.",
            },
            {
             ".#.....#.",
                    ".#....##.",
                    "##....#.#",
                    "####.#.#.",
                    "##....#.#",
                    "####.#.##",
                    "..#.##...",
                    "#.#.##.##",
                    "..####..#",
                    "##.#.#.#.",
                    ".#...#.#.",
                    "#.##....#",
                    "#.##.###.",
                    "##...##..",
                    "##...##..",
                    "#.##.###.",
                    "#.##....#",
            },
            {
             "..##.....#...#...",
                    "......##.######..",
                    ".........####.#..",
                    "........####.###.",
                    ".####...#..#..#.#",
                    ".......#..#.##...",
                    "##..#####...#.#.#",
            },
            {
             "..##....#",
                    "..##....#",
                    "#.#......",
                    "..##.##.#",
                    "#...#..#.",
                    "..####.##",
                    ".###....#",
            },
            {
             ".######.#..#.##.#",
                    "##.##.##..#.#..#.",
                    "#..##..##.#.#..#.",
                    ".#.##.#.#########",
                    ".#....#.#.#.####.",
                    ".##..##.##..#.##.",
                    ".........####..##",
                    "#########.##....#",
                    "#......#.#..####.",
            },
            {
             "#.##.#....#.##.##",
                    "##..##....##..###",
                    "..##........##..#",
                    ".####......####..",
                    ".#..#.####.#..#.#",
                    ".##.#.####.#.##..",
                    "################.",
                    "......####.......",
                    "#....######....##",
                    "#######..#######.",
                    ".......##.......#",
                    "..##...##...##...",
                    "......####.......",
                    "#....#.##.#....#.",
                    ".####..##..####.#",
            },
            {
             ".#.#.##..#.######",
                    ".##....#.#.......",
                    "#.#...##.#.###..#",
                    "#.#.##.##.###....",
                    ".#.#..#.##.#.....",
                    "#..##.####.......",
                    "..###..##...#....",
                    "...#..#...#.#.##.",
                    "......###...##..#",
                    ".#..#.#...#.##..#",
                    "##.####.##..##..#",
                    "##.#..#.#.#.#.##.",
                    ".#.#.....#..#....",
                    ".###..#.#...##..#",
                    "...#.##.######..#",
                    "...#.##..#####..#",
                    ".###..#.#...##..#",
            },
            {
             "###...#..##.##.",
                    ".#..###.##.#..#",
                    "##.....#..##..#",
                    "....#.#........",
                    "#..####.#..####",
                    ".####..#..##..#",
                    "#####.#.#######",
                    "#...#..########",
                    ".##......#.#..#",
                    ".######.#...###",
                    "...##.#.#.#####",
                    "..#.....##.....",
                    ".....###...####",
                    "......#.##.....",
                    "......#.##.....",
            },
            {
             "#........###.....",
                    "....##.......#.##",
                    "....##.......#.##",
                    "#........###..#..",
                    ".###..###..###...",
                    ".#.####.#.#.#..#.",
                    "##.####.##..#...#",
            },
            {
             "####.#......#.#",
                    "....#.......##.",
                    "####..#....#..#",
                    "##..#..####..#.",
                    "..#.#........#.",
                    "##.##.#.##.#.##",
                    ".......####....",
                    "##.#.########.#",
                    "##.##..####..##",
                    "...#.###..###.#",
                    ".....########..",
            },
            {
             "...#.#..##.###.",
                    "...#..#...#..#.",
                    "...#..###..###.",
                    "###......#.#..#",
                    "####....####.##",
                    "..#....####..#.",
                    "...##....##..#.",
                    "..#..##..#.#...",
                    "##..###..####.#",
                    "..#..#.#..#.#.#",
                    "##.....##..##..",
                    "##....##.#..##.",
                    "##.....##.##.##",
                    "..#.##.#.##..#.",
                    "###..##.##.###.",
                    "###.###.##.###.",
                    "..#.##.#.##..#.",
            },
            {
             "#..#.##..",
                    "#..#.#.##",
                    "#####.###",
                    ".##..####",
                    "..#.#####",
                    "#..#.##..",
                    "....#....",
                    "#..##..##",
                    "#..#.####",
                    ".....####",
                    "####.####",
                    ".##..#.##",
                    "#####.###",
                    ".##..#...",
                    ".##.##.##",
            },
            {
             "..##.###.#.##..",
                    "..#..##.#.##..#",
                    "##.......#..#..",
                    "##..##...####.#",
                    "##..##...####.#",
                    "##.......#..#..",
                    "..#..##.#.##..#",
                    "..##.###.#.##..",
                    "..#..##....#.#.",
                    "#....##.#......",
                    "##.#..###.....#",
                    "##.#..###.....#",
                    "#..#.##.#......",
            },
            {
             "##.##.##..####..#",
                    "#......#........#",
                    "###..#####....###",
                    ".#....#.#.####.#.",
                    "###..###.#....#.#",
                    ".##..##...####...",
                    "..#..#..#..##..#.",
                    ".##..##...#..#...",
                    "#......##..##..##",
                    "##....###.####.##",
                    "#......#..#..#..#",
                    "###..####..##..##",
                    "#......####..####",
                    "##.##.###......##",
                    "###..####.####.##",
                    ".######..######..",
                    ".#######..#..#..#",
            },
            {
             "####..#..#..#",
                    ".##.#..#...#.",
                    "#..#.#....#.#",
                    "....########.",
                    "#..#.#.##.#.#",
                    "....##.##.##.",
                    ".....#....#..",
            },
            {
             "..##.#.#.",
                    "......###",
                    "..#.##.##",
                    "###..####",
                    ".#.######",
                    "#.....###",
                    "....#.#..",
                    "....#.#..",
                    "#.....###",
                    ".#.######",
                    "###..####",
            },
            {
             "..#.##.####",
                    "#.#.##.#.#.",
                    "#.##..#....",
                    ".##.##...#.",
                    ".###.#.##.#",
                    "#.#.###...#",
                    ".#.#..#####",
                    "......#.###",
                    "......#..##",
                    "......#..##",
                    "......#.###",
            },
            {
             ".#.##....",
                    "####.####",
                    "##.###..#",
                    ".....####",
                    "..##.####",
                    "#..#..##.",
                    "#######.#",
                    "#...##..#",
                    "..#.#....",
                    "#.##.....",
                    "###.#.##.",
                    "#....#..#",
                    "#...##..#",
                    "###......",
                    "#..######",
                    "#..######",
                    "###......",
            },
            {
             ".#....#.####.##",
                    ".#....#.####.##",
                    "#...#......##.#",
                    "##.....#.#.#.##",
                    ".###.......##.#",
                    "...##.###.##.##",
                    "#####....#..#..",
                    "#....#..#.###..",
                    "#....#..#.####.",
            },
            {
             "###...##..#.##.",
                    "...##.#..##..#.",
                    "##.#.#..#..#..#",
                    "##.#.#..#..#..#",
                    "...##.#..##..#.",
                    "###...##..#.##.",
                    ".#..##..#..#..#",
            },
            {
             ".##..##",
                    "#..###.",
                    ".##...#",
                    ".....##",
                    ".....##",
                    ".##...#",
                    "#..#.#.",
            },
            {
             "###......",
                    ".#.##.##.",
                    ".#.##.##.",
                    "###......",
                    "..####..#",
                    "#.##.###.",
                    ".##.#.##.",
                    ".#.#..#..",
                    ".#.#..#..",
                    ".##.#.##.",
                    "#.##..##.",
            },
            {
             "###.#.##.",
                    "##..####.",
                    "##......#",
                    "##....#.#",
                    "###.#..#.",
                    ".#.#.#.#.",
                    "###.##.##",
                    "..#..#.#.",
                    "..#..#.#.",
            },
            {
             "..#.#...#.#..##",
                    "..#.#...#.#..##",
                    ".#...#####.#..#",
                    "...###....#..#.",
                    ".#..####..#.#.#",
                    ".#..#..##.####.",
                    "#######.##.##..",
                    "..#####.####..#",
                    "#.####.##...##.",
                    ".##...####....#",
                    "##.###.#..#####",
                    "#..###........#",
                    ".#.#######..#.#",
                    "...#......#..##",
                    "..........#..##",
            },
            {
             ".#.##.##.#####.",
                    ".#..##..##..##.",
                    ".#...#.#####.#.",
                    "#......#..##...",
                    ".#....##...#.##",
                    "#....######..#.",
                    "..#..#.#..##...",
                    "..#..#.#..##...",
                    "#....######..#.",
                    ".#....##...####",
                    "#......#..##...",
                    ".#...#.#####.#.",
                    ".#..##..##..##.",
                    ".#.##.##.#####.",
                    ".#.##.##.#####.",
                    ".#..##..##..##.",
                    ".#...#.#####.#.",
            },
            {
             ".....###.####.###",
                    ".#...###.####.###",
                    ".#...####....####",
                    "#.##.....####....",
                    "#.#...###....###.",
                    "#....##.##..##.##",
                    "#..#..##.####.##.",
                    ".#.##.....##.....",
                    "#####.##......##.",
                    "##.#.............",
                    "#.###.#.######.#.",
            },
            {
             "...##.##.##.#.#",
                    "###.#.#...#####",
                    ".#..##...##..#.",
                    ".#..##...##..#.",
                    "###.#.#....####",
                    "...##.##.##.#.#",
                    ".###.##......#.",
                    ".###.##......#.",
                    "...##.##.##.#.#",
                    "###.#.#....####",
                    ".#..##...##..#.",
                    ".#..##...##..#.",
                    "###.#.#...#####",
                    "...##.##.##.#.#",
                    "#.##.#..##..#..",
            },
            {
             "##...#..#...#",
                    "..##.#..#.##.",
                    "...###..###..",
                    "..#..#..#..#.",
                    "..###.##.###.",
                    "..###...####.",
                    "#####....####",
            },
            {
             ".#...#.####",
                    ".#..#..####",
                    ".###.#..##.",
                    ".###.#..##.",
                    ".#..#.#####",
                    ".#...#.####",
                    ".##.#......",
                    "#.#...#.##.",
                    "...#.###..#",
                    ".#..#.##..#",
                    "..##.###..#",
                    "#.#..#.....",
                    "####.###..#",
            },
            {
             "..#....########",
                    "..#....########",
                    ".#.##.#...##...",
                    ".###.#.###.####",
                    "#...#...#.##.#.",
                    "##..####.####.#",
                    "##..##.##.##.##",
                    "#...#.####..###",
                    "##.#.###.#..#.#",
            },
            {
             "#####.#..###.",
                    "...#...####..",
                    "...#...####..",
                    "#####.#..###.",
                    "...##..##...#",
                    "#..#.#.##.#..",
                    "###.####.###.",
                    "##.#...##..#.",
                    "###.###...#.#",
            },
            {
             "..#..#.###.#.##",
                    ".....#...#.#.##",
                    ".....#...#.#.##",
                    "..#..#.###.#.##",
                    "##.#..##....##.",
                    "..#.###.#.#....",
                    "#####....#.##..",
                    "..#...#....#..#",
                    "##..##.######.#",
                    "...#..#..#####.",
                    "##..#..#.##....",
                    "...##.#####...#",
                    ".#.###....##..#",
            },
            {
             "#..#..#..##..#.",
                    "...#..##.##.#..",
                    "###.#.########.",
                    "##.#...##..##..",
                    "#.####...##...#",
                    ".####.#.####.#.",
                    "##.##..######..",
                    ".####..#....#..",
                    ".##.##.##..##.#",
                    "..#.##...##...#",
                    "#.#.#.##.##.##.",
                    "#####.#.#..#.#.",
                    "...##...####...",
                    "#.#..##.#..#.##",
                    ".####.#.####.#.",
                    ".####.#.####.#.",
                    "#.#..##.#..#.##",}
    };

    decltype(input_real) input_test;
//    auto &input = input_test;
    auto &input = input_real;

    std::string get_column(const std::vector<std::string> &map, ll column) {
        std::string result;
        assert(column < map.at(0).size());
        for (ll y = 0; y < map.size(); y++) {
            result += map.at(y).at(column);
        }
        return result;
    }

    std::set<ll> find_v_reflection(const std::vector<std::string> &map) {
        const ll size_columns = map.at(0).size();
        std::set < ll > lines;
        for (ll line = 0; line < size_columns; line++) {
            ll column0 = line;
            ll column1 = line + 1;
            ll symmetric_lines = 0;
            while (column0 >= 0 && column0 < size_columns && column1 >= 0 && column1 < size_columns) {
                if (get_column(map, column0) == get_column(map, column1)) {
                    symmetric_lines++;
                    column0--;
                    column1++;
                } else {
                    symmetric_lines = 0;
                    break;
                }
            }
            if (symmetric_lines > 0) {
                lines.insert(line);
            }
        }

        if (lines.empty()) {
            return {-1};
        }

        return lines;
    }

    std::set<ll> find_h_reflection(const std::vector<std::string> &map) {
        std::set < ll > lines;
        for (ll line = 0; line < map.size(); line++) {
            ll row0 = line;
            ll row1 = line + 1;
            ll symmetric_lines = 0;
            while (row0 >= 0 && row0 < map.size() && row1 >= 0 && row1 < map.size()) {
                if (map.at(row0) == map.at(row1)) {
                    symmetric_lines++;
                    row0--;
                    row1++;
                } else {
                    symmetric_lines = 0;
                    break;
                }
            }
            if (symmetric_lines > 0) {
                lines.insert(line);
            }

        }

        if (lines.empty()) {
            return {-1};
        }

        return lines;
    }

    std::tuple<ll, ll, ll> inc(const std::vector<std::string> &map) {
        ll result = 0;

        auto v_result = find_v_reflection(map);
        ASSERT_EQ(v_result.size(), 1);
        auto v = *v_result.begin();
        if (v != -1) {
            result += (v + 1);
        }
        auto h_result = find_h_reflection(map);
        ASSERT_EQ(h_result.size(), 1);
        auto h = *find_h_reflection(map).begin();
        if (h != -1) {
            result += (100 * (h + 1));
        }
        return {v, h, result};
    }

    std::tuple<ll, ll, ll> inc_with_smudge(const std::vector<std::string> &map) {
        const auto [v, h, _] = inc(map);

        auto toggle_map = [](const std::vector<std::string> &map, ll x, ll y) -> std::vector<std::string> {
            auto new_map = map;
            if (new_map.at(y).at(x) == '#') {
                new_map.at(y).at(x) = '.';
            } else {
                new_map.at(y).at(x) = '#';
            }
            return new_map;
        };

        if (v != -1) {
            // v existed
            for (ll y = 0; y < map.size(); y++) {
                for (ll x = 0; x < map.at(0).size(); x++) {
                    auto new_map = toggle_map(map, x, y);
                    for (auto new_h: find_h_reflection(new_map)) {
                        for (auto new_v: find_v_reflection(new_map)) {
                            // only v changed
                            if (new_v != -1 && new_v != v && new_h == -1) {
                                return {new_v, new_h, (new_v + 1)};
                            }
                            // v disappeared but h appeared
                            if (new_v == -1 && new_h != -1) {
                                return {new_v, new_h, (100 * (new_h + 1))};
                            }
                            // v the same but h appeared
                            if (new_v == v && new_h != -1) {
                                return {new_v, new_h, (100 * (new_h + 1))};
                            }
                        }
                    }
                }
            }
        } else if (h != -1) {
            // h existed
            for (ll y = 0; y < map.size(); y++) {
                for (ll x = 0; x < map.at(0).size(); x++) {
                    auto new_map = toggle_map(map, x, y);
                    for (auto new_h: find_h_reflection(new_map)) {
                        for (auto new_v: find_v_reflection(new_map)) {
                            // only h changed
                            if (new_h != -1 && new_h != h && new_v == -1) {
                                return {new_v, new_h, (100 * (new_h + 1))};
                            }
                            // h disappeared but v appeared
                            if (new_h == -1 && new_v != -1) {
                                return {new_v, new_h, (new_v + 1)};
                            }
                            // h the same but v appeared
                            if (new_h == h && new_v != -1) {
                                return {new_v, new_h, (new_v + 1)};
                            }
                        }
                    }
                }
            }
        } else {
            assert(false && "exactly 1 line has to exist");
        }
        assert(false && "no smudge found");
    }

}

int main13() {
    int64_t result0 = 0;
    int64_t result1 = 0;
    std::vector<std::string> input_test_v = {"#.##..##.",
                                             "..#.##.#.",
                                             "##......#",
                                             "##......#",
                                             "..#.##.#.",
                                             "..##..##.",
                                             "#.#.##.#."};

    std::vector<std::string> input_test_h = {"#...##..#",
                                             "#....#..#",
                                             "..##..###",
                                             "#####.##.",
                                             "#####.##.",
                                             "..##..###",
                                             "#....#..#"};
    const ll test_h = *find_h_reflection(input_test_h).begin();
    ASSERT_EQ(test_h, 3);

    const ll test_v = *find_v_reflection(input_test_v).begin();
    ASSERT_EQ(test_v, 4);
    const ll test_v_no = *find_v_reflection(input_test_h).begin();
    ASSERT_EQ(test_v_no, -1);

    const auto inc_result = std::get<2>(inc(input_test_v)) + std::get<2>(inc(input_test_h));
    ASSERT_EQ(inc_result, 405);

    const auto inc_result_with_smudge =
            std::get<2>(inc_with_smudge(input_test_v)) + std::get<2>(inc_with_smudge(input_test_h));
    ASSERT_EQ(inc_result_with_smudge, 400);

    const auto multiple_vs = find_v_reflection({".......####..##..",
                                                ".####.##.#.#....#",
                                                ".####...#.#.####.",
                                                "######.##.#######",
                                                "........#..#....#",
                                                ".####....########",
                                                "......###.###..##",
                                                "#....##.###......",
                                                ".####...#.###..##",
                                                "#....####.##....#",
                                                "........##..####.",
                                                "##..##.####.####.",
                                                "######..#....##..",
                                                "#....#..####....#",
                                                ".####.##.#.######",});
    ASSERT_EQ(multiple_vs.size(), 2);
    ASSERT_EQ(*multiple_vs.begin(), 2);
    ASSERT_EQ(*multiple_vs.rbegin(), 13);

    for (const auto &map: input) {
        result0 += std::get<2>(inc(map));
    }

    myprint(result0);
    ASSERT_EQ(result0, 35210);

    for (const auto &map: input) {
        result1 += std::get<2>(inc_with_smudge(map));
    }
    myprint(result1);
    ASSERT_EQ(result1, 31974);
    return 0;
}
