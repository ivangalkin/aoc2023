#include <iostream>
#include <vector>
#include <array>
#include <set>
#include <iomanip>
#include <sstream>
#include <map>
#include <tuple>
#include <numeric>
#include <algorithm>

#ifdef NDEBUG
#undef NDEBUG
#endif

#include <assert.h>

#define ASSERT_EQ(a, b) \
   do { __typeof__ (a) _a = (a); \
       __typeof__ (b) _b = (b); \
     if (_a != _b)       \
     {                 \
       std::cout << _a << " != " << _b << std::endl; \
       assert(0);                  \
     }                  \
     }while(0)

#define myprint(arg) do { std::cout << "" #arg << " = " << arg << std::endl; } while(0)

using ll = int64_t;

namespace {

    std::vector<std::tuple<std::string, std::vector<ll>>> input_real{
            {"???#?????#?.#???#???", {9,  7}},
            {".?.?..?????.?#",       {1,  1,  3,  1}},
            {"??#??#?#?#?.??????",   {9,  1,  1}},
            {"?????????????",        {1,  5,  1,  1}},
            {"??#??#????##??.",      {6,  3}},
            {"#?#..#?#???",          {3,  5}},
            {"???#.??.?#???",        {3,  1,  2,  1}},
            {"?.?#??.???????????",   {2,  1,  3,  1}},
            {"??#?#??#.#..?#",       {4,  2,  1,  2}},
            {".????????..#??",       {6,  1}},
            {".??..?.????",          {1,  1,  1}},
            {"?.?##?#???#?#????#",   {1,  10, 1,  1}},
            {"??????????#.#?????.?", {2,  7,  1,  4, 1}},
            {"?.???..??.????#?",     {2,  3}},
            {"????.#??#???.",        {3,  7}},
            {"????#?????###?????#?", {4,  12}},
            {"#.??#????.",           {1,  5,  1}},
            {"?#???#??#.???#?..",    {2,  1,  1,  1, 3}},
            {"#???#????#?",          {7,  1}},
            {"??#..????#?#?",        {1,  1,  1,  5}},
            {".##??#??#?????????",   {9,  3}},
            {"????#.#??#??#..",      {4,  1,  2,  1}},
            {"...?.???...#?#??.???", {2,  4,  1}},
            {"..####?.??????",       {4,  2}},
            {"#.?.?##?#??#??#?",     {1,  4,  5}},
            {"??#??#???##?.?.??#??", {11, 5}},
            {"????#?#?.?.#.?#????",  {5,  1,  1,  1, 2, 3}},
            {"???.????...???#?#?",   {2,  4,  2,  4}},
            {"?..???....???#??",     {3,  4}},
            {"????##??###.?",        {2,  3,  3,  1}},
            {"?#..????#?##?##?#??",  {1,  13}},
            {"##?.?#????.?????..#",  {3,  3,  2,  1, 3, 1}},
            {".???.???????",         {1,  1,  2,  1}},
            {"##?##?#?.?????#?",     {2,  5,  3,  2}},
            {"###?#?.??#?#?",        {3,  2,  5}},
            {"##?#?.?#???#??????#?", {2,  2,  3,  2, 2, 3}},
            {"#?.#?#?.??????.?..??", {1,  1,  1,  5, 1, 1}},
            {".???....#?",           {1,  1}},
            {"???.#???#?#.??.",      {1,  3,  3}},
            {"#???####????..#",      {1,  8,  1,  1}},
            {".?????????#?",         {1,  2,  3}},
            {"#?#???##?.????",       {9,  2}},
            {".???...??.",           {2,  2}},
            {"??#?#????#",           {5,  1}},
            {"#??????#?###.#???",    {12, 1}},
            {"???#..??.??#???",      {1,  1,  1,  4}},
            {"????.?.?.?.???",       {1,  1,  2}},
            {"????#?#?#?#??????",    {7,  4,  3}},
            {"??#..?.#??##?..????.", {1,  1,  1,  6, 2}},
            {".#?#??#?.?#????#??.",  {6,  8}},
            {"#????????##??.??",     {2,  1,  2,  4, 2}},
            {"?###???.??????#??.??", {6,  3,  4,  1}},
            {"?#?#????#??.?",        {1,  1,  4}},
            {"###?????.?...???",     {3,  1,  1,  1, 2}},
            {".??#????#..",          {3,  3}},
            {".?..##??#?..????",     {1,  3,  2,  2}},
            {"?.?.?.?.?#?.?..",      {1,  1,  1,  3, 1}},
            {"?????#??#??.????..",   {4,  4,  3}},
            {"??.???..??..?.?",      {1,  2}},
            {"??#?.??#.#????#?",     {1,  1,  1,  1, 4}},
            {"???#.???#?#??#??",     {1,  1,  1,  5, 2}},
            {"?###??????#??#??.#",   {4,  1,  8,  1}},
            {"?#.????.????",         {1,  1,  1,  1}},
            {"?.?????.#.??",         {2,  1,  1,  1}},
            {"?.?#?###?..#?#???.??", {6,  5}},
            {"???????#???",          {1,  3}},
            {"?.??#?.?#.????#???",   {1,  1,  1,  6, 1}},
            {".???.?.?.#?",          {1,  1,  1}},
            {".#????..???",          {3,  1,  2}},
            {"?###?#???????.#?#?",   {8,  4,  1,  1}},
            {"?????????..???#.",     {2,  2,  2,  1, 2}},
            {"?#.????#??###????",    {1,  5,  3,  1}},
            {".?.?????#.????#?#",    {1,  5,  1,  4}},
            {"?#?#?#????????##???#", {3,  2,  3,  6}},
            {"??????????#?.???.?",   {1,  1,  2,  4, 3, 1}},
            {".?????????#???",       {3,  7,  1}},
            {"??###??##??",          {3,  4}},
            {"#.?????##?",           {1,  1,  5}},
            {"??????.??#.#?##??#",   {1,  1,  1,  1, 1, 5}},
            {"????...??????",        {1,  3}},
            {"??##??#????#??#???",   {7,  1,  5}},
            {"?.??????????.?",       {1,  1,  1}},
            {"?.?????#??#??",        {1,  7,  2}},
            {"?.?#?????..??",        {6,  1}},
            {"??????###??????#?.?",  {8,  2}},
            {"?##??????.?",          {5,  1}},
            {"?.???#???.#?",         {4,  2}},
            {"??##??.?.#?#????",     {4,  4}},
            {".##..?????#",          {2,  4}},
            {"????#??#.???????",     {2,  4,  1,  1}},
            {"..???#??.#.???#.#.",   {1,  1,  1,  4, 1}},
            {"??????????#?????#",    {2,  1,  5,  1, 1}},
            {"?.??????.???##??.??",  {1,  3,  1,  1, 2, 1}},
            {".?????##???#??",       {1,  7}},
            {"?.?????????",          {2,  3}},
            {"?##?#??..#?#?.",       {6,  3}},
            {".???#?????#?.??.",     {2,  2}},
            {"?###??????..?#",       {6,  1,  2}},
            {"?..#?????#?#?#????#?", {1,  12, 1,  1}},
            {"?#.?????.???#.#?##??", {1,  1,  3,  2, 4}},
            {"???###?.??????",       {1,  5,  5}},
            {".????.??#?#?#???",     {2,  1,  8}},
            {"???#??#???#??.?",      {1,  9,  1}},
            {".#???#??????",         {5,  2,  1}},
            {"????????????#?.",      {1,  9,  2}},
            {"?.??#??.?.???#??.???", {3,  4}},
            {"???#?..?????####?",    {5,  1,  4}},
            {"????.???#??..?",       {2,  6}},
            {"#?#.?#??##?#??#",      {1,  1,  2,  4, 2}},
            {".?.??.?.#?.???",       {1,  1,  2,  2}},
            {"?##????#.????????##?", {5,  1,  10}},
            {"???..#??#???#",        {1,  1,  2,  1}},
            {".????.?#???????",      {1,  1,  4,  1}},
            {"?#???.?##?#???.??#??", {1,  2,  5,  1, 1, 1}},
            {".#?..#?????",          {1,  1,  2}},
            {"????#??#??.#.##???",   {4,  2,  1,  1, 3, 1}},
            {"??.#??#..?#????#?",    {1,  2,  1,  2, 4}},
            {"#.?.#??.#?",           {1,  1,  1}},
            {"?????.??#???#?.",      {2,  3,  2}},
            {"?????#??????.??",      {3,  3,  3,  2}},
            {"?????????.???#??",     {5,  3}},
            {"##????..?????????",    {5,  2,  1,  1}},
            {"?#???????#",           {2,  1,  1}},
            {"??.?#?.?#???..#.?",    {1,  2,  5,  1, 1}},
            {"##??.?.?##?.??",       {4,  3,  2}},
            {".#????.????#??",       {3,  1,  1,  1}},
            {".#..?#?#???",          {1,  5}},
            {"?#.?.??.??",           {1,  1,  1}},
            {".?????#?.??##???",     {2,  1,  6}},
            {"??????.??????#",       {3,  1,  2,  1}},
            {"?.??.#?#?#??????.",    {7,  1}},
            {"?#?.#????#?????.??",   {2,  2,  3,  2, 1}},
            {"??#???.?##??????",     {3,  5}},
            {"#??#?????##?#??#??.#", {1,  2,  5,  1, 3, 1}},
            {"?????#????#??????",    {10, 3}},
            {".#??.?.?????#?",       {1,  1,  1,  7}},
            {"????.???..#??????",    {2,  1,  7}},
            {"?????#??#???????",     {2,  2,  6,  1}},
            {"???.??.??#????#?.",    {1,  2,  9}},
            {"#.?#?.??##????",       {1,  1,  5,  1}},
            {".?????#??.",           {3,  2}},
            {"????#???.???.???",     {6,  2,  2}},
            {"??###?#?????.",        {3,  1,  1,  1}},
            {"????#?.???????.?.??",  {1,  1,  1,  7, 1, 1}},
            {"????#??.?.",           {4,  1}},
            {".#??.??.??.?",         {2,  1,  2}},
            {".?.????#?#???#",       {2,  5,  1}},
            {"????.?#???#?",         {1,  1,  7}},
            {"??#.?#????##?",        {1,  1,  8}},
            {"???..??#??.??##???",   {1,  1,  1,  2, 5}},
            {"#??#??##???#?",        {1,  1,  6}},
            {"???????????",          {6,  1,  1}},
            {"??#???#?#????.",       {4,  3,  1}},
            {"?..##?###??????",      {1,  10}},
            {".???##????#??.?##?.?", {5,  4,  3,  1}},
            {"???#??.???#?.??#",     {5,  2,  2,  1, 1}},
            {"??.???.?.??????????",  {2,  1,  2}},
            {"????.??????#?#?????",  {3,  1,  1,  5, 1}},
            {".????##?..#????.?.??", {5,  5,  1}},
            {"????????#???##??#??",  {8,  5,  3}},
            {"?.?.??#??#??##?.?",    {2,  6}},
            {"???#??????",           {4,  2}},
            {"???##??????",          {8,  1}},
            {"?#??##???##???#?.",    {1,  3,  7}},
            {"??#??????##??",        {1,  1,  4}},
            {"??..???.?????.",       {2,  2,  1,  1}},
            {"?#??##?.?#?",          {1,  3,  1}},
            {"??.????????##?#??",    {2,  3,  6}},
            {".#.#??.??#.?",         {1,  3,  2,  1}},
            {".?#?#???.?????.",      {5,  1,  1}},
            {"????##???#?.",         {2,  3,  1}},
            {"?#??#??????#",         {1,  6,  1}},
            {"?.#?#.??#.##???",      {1,  1,  2,  2, 1}},
            {"???#????##?#?#??",     {1,  1,  1,  8}},
            {"??.#..?.?????????.",   {1,  1,  1,  3, 1, 1}},
            {"?.#?##?????",          {4,  1,  1}},
            {"?????.####??",         {1,  4}},
            {"?????????????.???",    {1,  7,  1,  1}},
            {"?????#??#?????#?#?",   {2,  3,  2,  6}},
            {"??#.?????.",           {2,  4}},
            {".??#????#..",          {3,  2}},
            {"???#????.??#?",        {4,  1,  1}},
            {"????.??.??.???",       {1,  1,  1,  3}},
            {"??##?#??#????#?..#",   {7,  6,  1}},
            {"???#???.?????",        {4,  1,  3}},
            {"?#?###?.#??##???#",    {6,  2,  4,  1}},
            {"?.#?#??.?..??.??",     {3,  1}},
            {"#?#?.#?#??????",       {1,  1,  1,  7}},
            {"????#??.??.?.?#.",     {5,  2,  1,  1}},
            {"???.??.????..",        {1,  2}},
            {"?##????.???.",         {4,  1,  1}},
            {"#.#?##??#???????.",    {1,  14}},
            {"?#????.####???",       {2,  2,  5,  1}},
            {"??.?????#???.???",     {1,  5,  1,  1}},
            {"????####???#?",        {7,  1}},
            {"?.??????#????.?????",  {1,  8,  1,  1}},
            {"???.?#???#.??#",       {2,  6,  2}},
            {".???#??.?#?#??",       {3,  4}},
            {"???.????##???#",       {2,  7,  1}},
            {"??????????",           {1,  1,  1}},
            {"#??????#?.??#??????",  {1,  3,  2,  3, 1, 1}},
            {"#????????.",           {3,  4}},
            {"??.??#??.?#??#####?",  {2,  1,  1,  1, 9}},
            {"?#????..?#??",         {2,  1,  3}},
            {"????????.???",         {1,  1}},
            {"?????#??????.#??#?.?", {1,  5,  1,  1, 5}},
            {"..?#?##?????.#??#?",   {9,  2,  2}},
            {"????#????.#.",         {1,  1,  3,  1}},
            {"???.?#??##?#?",        {1,  7}},
            {"?#?????#???",          {2,  4}},
            {".??#???#??#?????#",    {4,  6,  1}},
            {"??..??????#",          {1,  3,  1}},
            {"?????.??.?????#",      {5,  1,  3,  2}},
            {".#?#..????.???????",   {3,  1,  1,  1, 3}},
            {"?#?##??????#?",        {6,  1,  1}},
            {"?.#?.#?#?##??..????",  {1,  1,  8,  1, 1}},
            {"??#?????##??.",        {5,  4}},
            {"#??#???##????????#",   {12, 1,  1}},
            {"??#?.?????",           {2,  1,  1}},
            {"#.??#????#?.????",     {1,  1,  4,  2, 2}},
            {"??.#????#?#?????",     {1,  2,  4,  1}},
            {"????#??.??#?",         {5,  2}},
            {"?#?#???#?..",          {5,  3}},
            {"??.??#??##???##?#",    {1,  3,  4,  2, 1}},
            {"????..??##??.???",     {3,  6,  3}},
            {".???.#??##.#.?",       {1,  5,  1,  1}},
            {"?#?????##?",           {2,  2,  3}},
            {"#?.???#??#?#?.?",      {2,  7,  1}},
            {"??#??#??.#?#?#?##",    {1,  3,  8}},
            {".????.#.?????#?",      {4,  1,  2,  3}},
            {"#.???.??#???#???",     {1,  3,  1,  1, 5}},
            {"??#.#.???.??????",     {2,  1,  1,  1, 2}},
            {"??#?#?.#?#?.##??##?",  {6,  3,  2,  3}},
            {"?##??.?##?.????",      {2,  1,  2,  1, 1}},
            {"?#?.?.????",           {3,  1}},
            {"???????##???????",     {5,  5}},
            {"..????.?##??",         {2,  3}},
            {"?.??.????#??.???",     {1,  1,  1,  4, 1}},
            {".??????#???#??????",   {2,  8}},
            {"..?###???.?????????",  {3,  6}},
            {"????#?#.?????#?????",  {2,  4,  1,  1, 3, 1}},
            {"??.?.??#???",          {1,  1,  4}},
            {"????#?#?#?#???#",      {1,  5,  1,  3}},
            {"..#???#???.??##???#?", {7,  1,  2,  3}},
            {"??.#?..???#???#.",     {1,  1,  1,  5}},
            {"..??????#????",        {1,  1,  2,  1}},
            {"???.??#??.??.?",       {1,  4,  2}},
            {"#?.#???#?.",           {1,  2,  3}},
            {".????#??#?#??.?#",     {1,  10, 2}},
            {"??#.???#?..",          {2,  1,  2}},
            {"?.?.???##???#?#?",     {1,  11}},
            {"???????????#??",       {1,  7,  1,  1}},
            {"#?..#?.?#?#.?",        {1,  1,  4}},
            {"????#????.??##?#???",  {1,  6,  5}},
            {"???.??#???#.#?#",      {1,  1,  6,  3}},
            {"????????.?",           {3,  3}},
            {"???.?.#??##?????",     {2,  1,  1,  3, 1}},
            {"..????#.??.",          {1,  1,  2}},
            {"???#??##??.#???..#",   {10, 1,  1,  1}},
            {"??????????.?????.",    {8,  2}},
            {"??????????..?.#...?.", {5,  1,  1,  1, 1, 1}},
            {"??.????#???.???#?",    {1,  5,  1,  2}},
            {"???..???##??##??",     {3,  9}},
            {"?#.??.?...",           {1,  2,  1}},
            {"#?????#?##??????#??",  {1,  1,  8,  3, 1}},
            {"...?????.?",           {1,  3}},
            {"?##???##????..?",      {8,  1}},
            {"?.??????##??",         {1,  5}},
            {"#????????#?#?#???.",   {1,  13}},
            {"?#??.???#???",         {1,  1,  1,  1}},
            {"???#????#????#??",     {8,  3}},
            {".#.###???.#?",         {1,  3,  1,  1}},
            {".?##.?????.#????",     {3,  3}},
            {"????..????##?.#??#?#", {1,  1,  1,  4, 1, 4}},
            {"?????????#???????",    {6,  1,  2}},
            {"#??##..?##??????",     {1,  3,  6}},
            {"?#....#?##???#?#",     {1,  10}},
            {"??##??????.??.",       {3,  1,  2,  2}},
            {"???.????#????##?.?",   {1,  2,  2,  3, 1}},
            {"?????.#?.??.",         {2,  2,  2}},
            {"???###.???#?.??.",     {4,  3,  1}},
            {"?##?#???.??",          {6,  2}},
            {".???.?.?.???????",     {1,  1,  1,  4, 1}},
            {"????#????.##?#?",      {6,  5}},
            {".??????#?#.",          {2,  3}},
            {"????.#?#????.?##?",    {3,  5,  1,  4}},
            {"?.#?#.???#?#??.???",   {1,  1,  1,  7, 3}},
            {".#?#?????.?.?#?#?.?",  {4,  4}},
            {"????#????.?",          {1,  4,  1}},
            {"??#?#..#.##?#???",     {3,  1,  1,  7}},
            {"#????##?..??.",        {1,  5,  2}},
            {"???#??.???",           {3,  1}},
            {"??.#??.???",           {1,  1}},
            {"#?#?###???..?.#?#.",   {1,  8,  1,  1, 1}},
            {"#...?..??.?#??##??",   {1,  1,  1,  6, 1}},
            {"????##??????##...??.", {1,  8,  2,  1}},
            {".?#????##????#?",      {1,  6,  1}},
            {"??#???..??.",          {6,  1}},
            {".#?#.???#???#?#",      {3,  4,  1,  1}},
            {"#???#.#?###?##",       {1,  2,  1,  6}},
            {"?##?#?#???",           {6,  1}},
            {"#??????.#???",         {2,  2,  4}},
            {"??#?.????#?#????",     {3,  1,  5,  1}},
            {"???????#?#?",          {1,  3}},
            {"#?..???#??",           {2,  4}},
            {"??????.##??#??#??",    {1,  1,  1,  8, 1}},
            {"??????????.?",         {3,  1}},
            {"#???#????..??",        {7,  1,  1}},
            {"??????.##???..?????.", {1,  2,  5,  3, 1}},
            {"????#?#?.???..",       {4,  2}},
            {"##?.????#?#??##????",  {3,  13}},
            {".?????.?##?.?",        {1,  3}},
            {"??..??.????#??",       {1,  1,  6}},
            {"?.#.???.#?#?????.",    {1,  1,  8}},
            {"?#??..#????",          {2,  1,  1}},
            {".###??#???#??#",       {3,  8}},
            {"?#?#?.???#?.??",       {3,  5,  1}},
            {"?.?.???.?.???##??.?",  {2,  4}},
            {"?????#.???????",       {1,  1,  4,  1}},
            {"??.??????..#?#??",     {1,  3,  1,  1, 1}},
            {"???#?#??#?..?",        {2,  3,  1,  1}},
            {"?.##?#?.??#?#?",       {4,  3,  1}},
            {"#??..??.?#???..",      {3,  5}},
            {"?????????#??????",     {1,  5,  1,  1, 1}},
            {"??#???????#???",       {3,  3}},
            {"#.?.?##????????#??",   {1,  1,  7,  1, 3}},
            {"??????.#???????#?",    {4,  3,  5}},
            {".??#???.#????#?",      {4,  1,  5}},
            {"??#??.???.???",        {1,  2,  1,  2}},
            {"#?#??##??#?##?#.??#",  {1,  8,  4,  2}},
            {".#?????.???##??????",  {3,  2,  8}},
            {"?????????.???",        {2,  3,  1,  1}},
            {"?????##?.???#??",      {4,  1,  3}},
            {"??????.??#????????#?", {2,  1,  3,  3}},
            {"#???????#???",         {2,  5,  1}},
            {"??.??#??#??#??????",   {1,  1,  5,  1, 2, 1}},
            {"??#??????.?.?",        {2,  1,  1,  1}},
            {"#????##?#?????",       {2,  1,  6,  1}},
            {".#?#???#???",          {3,  5}},
            {"???????.???.?##??.",   {1,  2,  5}},
            {"?.??.???#???#??",      {1,  1,  2,  3}},
            {"?.##?#??###?.???#?.",  {1,  10, 1,  3}},
            {"??????#.????#???",     {6,  4}},
            {"????????..##??",       {2,  2,  1,  4}},
            {".##???????###??#?.",   {4,  11}},
            {".???#??????????#???",  {1,  1,  1,  1, 3, 4}},
            {"???.#??#?.##.?#??",    {1,  1,  3,  2, 1}},
            {"?.?#.??#?#???",        {2,  3}},
            {".????.?.???#?#",       {1,  1,  1,  6}},
            {"??.#???#??",           {1,  3}},
            {"???.??????",           {3,  2,  1}},
            {".???????#????#????",   {12, 1}},
            {"???????....#??#??#?",  {2,  1,  7}},
            {"#????#?????.?????.?",  {2,  4,  1,  3}},
            {"???#??#????",          {5,  1}},
            {"?#?..##?#.??",         {2,  4,  1}},
            {"???#??????##???#?#?.", {3,  10}},
            {"#?????.???.???",       {3,  1,  2}},
            {"###?????##...??.",     {4,  4,  1}},
            {"??????????#.??#??",    {8,  2}},
            {"#?.????##..?#???",     {2,  1,  2,  1, 1}},
            {"????##??#?...?????",   {1,  6,  3}},
            {"?#?.#?????#???#?",     {2,  1,  1,  4, 1}},
            {"????.#?##.???????#",   {2,  4,  4,  1}},
            {".??#????#?",           {4,  1}},
            {"????????##??#?#?",     {1,  1,  1,  7}},
            {"##.???#????#???##?",   {2,  8,  4}},
            {".?#??????.",           {2,  1,  1}},
            {"???.?????.?",          {1,  2}},
            {"?#?#.???##?##??#",     {4,  8}},
            {"????????.?#??#???#?.", {2,  1,  4,  3}},
            {"??#??#?.?.??#?##?#??", {6,  1,  1,  5}},
            {"???#????#?..#?#?#",    {2,  5,  5}},
            {"#??#??#?..??",         {7,  1}},
            {"...?#?#??#???.#??",    {7,  3}},
            {"???#.???#?#?.??.",     {2,  1,  3}},
            {"?#?#???#???",          {4,  3,  1}},
            {"?.?##????????????",    {6,  2}},
            {"?????.?##?#??",        {1,  1,  7}},
            {".#????#?.?#??",        {7,  1}},
            {"????##??.?#?#??",      {1,  2,  1,  3}},
            {".?#??##?.???##?",      {1,  4,  3}},
            {"????.#??.??????",      {1,  1,  3,  3}},
            {".?#????.??.",          {3,  1}},
            {"???#??.????#?.??",     {4,  4}},
            {"??#????#.??",          {2,  3}},
            {"??????.???????",       {3,  3}},
            {"????#?#.?#?##?##?",    {3,  8}},
            {"??.?#.????#????",      {1,  3,  3}},
            {"#???.???##????#.",     {1,  1,  6,  1, 1}},
            {"#??????.?###?#??#?",   {1,  5,  3,  2, 1}},
            {"???###???.?.?#????",   {1,  3,  1,  1, 4}},
            {"?????????.#?.",        {4,  1,  1}},
            {"?.????????.?..",       {7,  1}},
            {"##???#??#?#??..??.",   {12, 2}},
            {"..??????.????#.???",   {1,  5}},
            {"#?.#?.##?.?",          {1,  1,  2}},
            {"???.????#??#????????", {1,  15}},
            {"?#??.??????",          {3,  4}},
            {"?????.?????##??#?",    {2,  1,  1,  6}},
            {"??#?##?.?##???",       {5,  3}},
            {"#???????????.?#.",     {1,  1,  3,  3, 2}},
            {".??#????#?#?#?##?",    {2,  4,  6}},
            {"??????.??##..",        {1,  4}},
            {"?????##?????#???#?",   {1,  5,  1,  2, 1}},
            {"?.#???#?#?",           {5,  1}},
            {"#??????????",          {2,  5,  1}},
            {"?#????#?????????##?.", {2,  5,  9}},
            {"??#???????.",          {3,  1,  1}},
            {"?##?????..###??#?#??", {2,  3,  3,  5}},
            {"?.#???##???#?????",    {1,  8,  1,  3}},
            {"?????#?.???.??",       {2,  3,  1,  1}},
            {"#??#??##?#?##?????#",  {1,  1,  9,  2}},
            {"????.?#??#???#??????", {1,  2,  9,  1}},
            {"??#??#??#.?",          {7,  1}},
            {"????#????.#?????",     {7,  5}},
            {"???.?#?#??.???#??#??", {3,  3,  1,  1, 4, 1}},
            {"?##???????",           {3,  2}},
            {"##.?#??????.?.??",     {2,  5,  1,  1, 1}},
            {"####?#???#?.?????",    {4,  2,  2,  5}},
            {"?????#?#???#.??#???#", {10, 1,  4,  1}},
            {"?..??#?#.?.?.",        {5,  1}},
            {"?????...??#.???",      {1,  2,  3,  1}},
            {"#?#?#??.?????",        {5,  1,  3}},
            {"???.????????????.",    {1,  10}},
            {"?.?###?????.???",      {7,  1}},
            {".??#.????#????.??",    {1,  1,  1,  4, 1}},
            {"???###?##???#.???",    {8,  1}},
            {"?????#.?#???#.#???",   {1,  1,  1,  1, 1, 3}},
            {"??#???#??#?#?",        {1,  4,  1,  1}},
            {"??.????.???????",      {1,  1,  2}},
            {"?????????????.",       {2,  5,  1}},
            {".????#?#???????.",     {2,  11}},
            {"??.????#?#?#?",        {1,  3,  1,  1}},
            {"?????????#??#?",       {2,  1,  7}},
            {"????.#?.???",          {2,  2,  1}},
            {"??.??????.#??#?.",     {3,  5}},
            {"???###.?????#???",     {1,  3,  9}},
            {"???#?????#?..??",      {11, 1}},
            {".??#???????????#?",    {10, 3}},
            {"??.#???.????????.?",   {3,  4}},
            {"?##.?#..?????#??.",    {3,  2,  7}},
            {"#?#??????.?.#.????",   {1,  5,  1,  1, 1, 1}},
            {"..??###??#?????.?",    {5,  7}},
            {"?.?.?###?##?#????",    {1,  10, 2}},
            {"?##???????#??????.#",  {7,  3,  2,  1}},
            {"????#?#?.?",           {2,  5}},
            {"?.??.?#.????##?#??.",  {1,  2,  6}},
            {"??#?.#?#?##?#????#.",  {1,  1,  1,  4, 1, 4}},
            {".###??.?.?.?#?",       {4,  1,  1}},
            {"???#??###?#?.?.??.",   {10, 1}},
            {"#???????#????#?.#.?",  {4,  2,  2,  1, 1, 1}},
            {"?#????#..???",         {1,  1,  1,  1}},
            {"?#?#???..???..",       {7,  1,  1}},
            {"???#?#??#?.",          {6,  1}},
            {".#????????",           {1,  4,  1}},
            {"???.???.#?#???#????",  {1,  1,  1,  1, 6, 1}},
            {"???#..#???####??.",    {4,  3,  6}},
            {"???#??#??????#?#",     {6,  1,  2,  1}},
            {"?####?.?.?#??.?#?.",   {6,  4,  2}},
            {"???????????.??",       {8,  1,  1}},
            {"?#?.?.??.???#?#?#",    {2,  1,  7}},
            {"#?#?#?#?##???###??",   {7,  2,  5}},
            {".??##..#???..?",       {3,  1,  1,  1}},
            {"?#..?.??.???#",        {1,  1,  3}},
            {"?????.?#???",          {1,  2,  3}},
            {".#?#.??.#??.???????",  {3,  1,  1,  1, 5}},
            {"?????..?..???",        {1,  1,  1}},
            {"???????#??#.????.???", {10, 3}},
            {"#?#?#?..??",           {3,  2,  1}},
            {"?????.#?##??#.?",      {1,  1,  5,  1}},
            {"?##?.??.?#?#????",     {3,  6}},
            {"..??.????????##?",     {1,  2,  1,  1, 3}},
            {"?#?..?????.",          {1,  3}},
            {"??##??.#?.??..#",      {4,  1,  1,  1}},
            {"??.???#?##..?##????.", {5,  3}},
            {"?.?##?..???.?.?",      {1,  3,  2,  1, 1}},
            {"..?.??##????#",        {1,  7}},
            {"???.??.???????#??#?.", {1,  10}},
            {"???##?..#?????....?.", {4,  6,  1}},
            {"??#??.?????.",         {1,  4}},
            {"???#?????.#??",        {4,  1,  1,  2}},
            {".?#.?#???.#.???.",     {2,  3,  1,  2}},
            {"???#?#??#???##????",   {7,  4}},
            {"?#?????###?",          {2,  4}},
            {"???.#.??????",         {2,  1,  1,  1}},
            {"??#.??####?",          {1,  5}},
            {"??###?..?##??.",       {4,  3}},
            {".????.??####?#?",      {4,  9}},
            {".????????.",           {1,  1,  1}},
            {"..????#???#???",       {9,  1}},
            {".???????????#?#??.",   {5,  8}},
            {"??.????#??",           {1,  3}},
            {"?..??#.??#",           {1,  1,  1}},
            {"?##.??#?#???",         {2,  5,  1}},
            {".??#????#??",          {3,  1}},
            {".????????????#",       {6,  1,  1}},
            {".?.?##???##??#??",     {1,  4,  2,  4}},
            {"????????##??.???",     {3,  1,  5,  1}},
            {".???????##?????",      {1,  2,  5,  2}},
            {"???????.?#.?",         {3,  1}},
            {"?#?..?.????.????#",    {3,  2,  5}},
            {"?#???#?#???#??#??",    {7,  3,  1,  1}},
            {"#??#???..???#",        {1,  1,  2,  4}},
            {"?.???#?#?????????..?", {5,  5}},
            {"??.??###?#??????.",    {1,  8,  1}},
            {"???#?###??#??????",    {1,  9,  1}},
            {".??#?????????#????",   {3,  4,  5}},
            {"?#??#?????.???#",      {2,  2,  4,  1, 1}},
            {"?.??#???.???.",        {1,  3,  1,  1}},
            {"??#???#.#.?###..#?",   {1,  1,  3,  1, 4, 1}},
            {"##?#.?#??..???##???",  {4,  1,  5}},
            {"#????##?..??",         {2,  4,  1}},
            {".??????..#?#..?",      {2,  2,  1,  1, 1}},
            {"????.?.#?????##?",     {1,  2,  1,  1, 6}},
            {"#??#.#????##?.",       {1,  2,  8}},
            {"???##??##?????#??",    {4,  4,  4}},
            {"????.????#???.",       {1,  1,  1,  3}},
            {"??#.#?.??.?#??.???",   {1,  2,  1,  2, 1, 1}},
            {"???##????.?##???",     {8,  4}},
            {"?.?????.##???#???#??", {3,  1,  3,  5}},
            {"???#??????#??#????#.", {1,  13}},
            {".??#?.????.",          {1,  1,  1}},
            {"??#???.????",          {1,  1,  2}},
            {"???#####?#????#??.?",  {9,  2,  1}},
            {"#..####?????##??.#",   {1,  8,  2,  1, 1}},
            {"???##???##???????#.?", {1,  11, 1,  1}},
            {"#???????#?#?.?",       {1,  1,  3,  4}},
            {"??.??.?????",          {1,  2,  3}},
            {"??.??##??.?",          {1,  4}},
            {".??????#...??",        {1,  1}},
            {"##.#?#?.?????#??????", {2,  1,  1,  1, 8}},
            {"????????#..?..???#?.", {3,  1,  1,  1, 4}},
            {"?.#??..????#.?.#??#",  {3,  1,  2,  1, 1}},
            {"??#?#??#????#.?.??.",  {11, 1,  1,  1}},
            {"#?#????##???????????", {4,  11, 1}},
            {"?????.??.#?#???????",  {2,  1,  9}},
            {".?#???.?#??????",      {3,  7}},
            {"?#?????.???#",         {3,  1,  1,  1}},
            {"???.?????#..?",        {1,  1,  2,  1}},
            {"##???##?.???",         {3,  3}},
            {".????##?#?#????#.?..", {7,  6}},
            {"?.???###??.?##?",      {6,  3}},
            {"#?.#?#??????#????#?.", {1,  1,  1,  1, 6}},
            {"?#??#?????????",       {4,  1,  2}},
            {"?.??..???#?...??.?",   {4,  1}},
            {".?????..?.??#??.",     {2,  2}},
            {"?????##??#????",       {9,  2}},
            {"????#????????#?#????", {5,  11}},
            {"????.?????",           {2,  2}},
            {"??.???.???",           {1,  1,  1}},
            {"?#???#..?????",        {2,  1,  1,  1}},
            {"????.??##?",           {3,  3}},
            {".?#???#?????",         {2,  1,  3}},
            {".#?#?#??#??.#???#?",   {9,  1,  1}},
            {"???#??#??##?????#",    {11, 1}},
            {"..?..????.#?#?#?.",    {1,  1,  5}},
            {"?.??????.?",           {1,  1,  1}},
            {".??#??#????",          {7,  1}},
            {"#?.#..??????????#",    {2,  1,  9,  1}},
            {"???.???.???.??",       {1,  1,  2,  2}},
            {"?#???#????#?##?????.", {2,  9,  2}},
            {"#????.###??.???",      {1,  2,  5,  1, 1}},
            {".#..????????#",        {1,  2,  5}},
            {"?.#????#???.#?.##?",   {1,  1,  4,  1, 1, 2}},
            {"?#????#?.#.#?..",      {2,  1,  3,  1, 1}},
            {"?#.?.#??#.",           {2,  1,  4}},
            {"?#???.??#?",           {1,  1,  1}},
            {"?????#?#.???#?????#",  {7,  7,  1}},
            {".#?#.?.??.##???",      {3,  1,  1,  5}},
            {"??.?#??.???#.?",       {2,  4}},
            {"?.????????",           {2,  3}},
            {"??????..?????",        {1,  1,  1,  3}},
            {"?#?#?#????..??",       {5,  1}},
            {"..##??.?##.",          {3,  3}},
            {"?##.???#?#.",          {3,  4}},
            {"?..#.?.???##???###",   {1,  1,  1,  1, 9}},
            {"#??#?.??##?????",      {4,  9}},
            {".???????.#?",          {2,  1,  2}},
            {"???????..??.?",        {4,  1,  1}},
            {"????.?????.?.??",      {2,  1,  1,  1, 1}},
            {"?#??.?##???.?#???",    {2,  5,  5}},
            {".???#??.??#?##?.",     {3,  5}},
            {"#.??????#??????.?#?",  {1,  10, 2}},
            {"??#??#?????#??",       {2,  2,  1,  3}},
            {"?.???????????.",       {1,  1,  1,  3}},
            {".???#?.#???",          {1,  2,  3}},
            {"?????#???????#",       {8,  2}},
            {"??.??.#??.#????#???",  {1,  1,  1,  1, 1, 5}},
            {"??#?#????.#??????.?",  {1,  4,  1,  1, 1, 1}},
            {".?????#??#?.??.",      {2,  6,  1}},
            {"?.#?##?#?##?.",        {6,  2}},
            {"??#?#?##???.?????.",   {10, 1,  1}},
            {"?#??#?????##",         {4,  1,  2}},
            {"??..????#???????#??",  {2,  7,  4}},
            {"??#????????.#.?",      {2,  1,  4,  1, 1}},
            {"??#???#..#?#?##?",     {1,  2,  2,  1, 5}},
            {"#?????#.????.",        {7,  3}},
            {"?.?.#?##???#??..?.?",  {1,  1,  10, 1}},
            {"??##.#???.??#.?",      {3,  2,  1,  1, 1}},
            {"???.?#???.",           {1,  2,  1}},
            {"??.?.?#???##",         {2,  1,  1,  4}},
            {"#?.#????#???",         {2,  7}},
            {"???????.???????#???",  {4,  6,  1}},
            {".???#.?..?",           {1,  1,  1}},
            {".??#.????#?????",      {1,  1,  3,  1}},
            {"???.#??????#?#??#.?",  {2,  10}},
            {"..#?#?.?????#.?",      {1,  1,  1,  4, 1}},
            {"##???#????.",          {6,  2}},
            {"..??.?##?.?#??",       {2,  3,  2}},
            {".?.??????###???.??#?", {1,  9,  1,  3}},
            {"?.?.??.#.?#.",         {1,  2,  1,  2}},
            {".#?#??#?.?##.?.#?#??", {4,  1,  2,  3}},
            {".??###???#?#?????",    {3,  6}},
            {"?.#???????#??#.",      {1,  2,  4,  2, 1}},
            {"?#?????#?.??#?.",      {2,  1,  1,  3}},
            {"?????.#?.??#?????",    {3,  2,  5,  1}},
            {"??.###?????",          {1,  3,  2}},
            {".????????#??.??????",  {1,  2,  1,  2, 1, 5}},
            {"?.???.???###?##..",    {1,  9}},
            {"#??????#.??",          {2,  5,  1}},
            {"##??????????..????",   {4,  1,  2,  4}},
            {"??..?##.??.??#??",     {2,  3,  1,  4}},
            {".#?.???????#??.",      {1,  8}},
            {"#?#?..????#?",         {1,  1,  2,  1}},
            {"?#?#.?##???",          {1,  1,  6}},
            {"??#??##???#???",       {4,  3,  1}},
            {".???#????#",           {4,  1}},
            {"#?????????###???",     {1,  1,  1,  4, 1}},
            {"??#?#?????.?#.?????#", {10, 1,  2,  3}},
            {".????#.?#?.?.??",      {2,  1,  3,  1, 1}},
            {"???????#?#??#??.?",    {1,  10, 1}},
            {"#??.????#.",           {2,  1,  1}},
            {"?.??.???#.?",          {1,  1,  2}},
            {"..????#????????",      {9,  1,  1}},
            {"????????#?#??#??",     {4,  4,  2}},
            {"?#??..###?##?",        {3,  6}},
            {"???#??????",           {1,  1,  2}},
            {"#??#??..??.?.?#?",     {6,  1,  1,  3}},
            {"??#?.##???.??#",       {1,  3,  3}},
            {"????###??????.",       {6,  1}},
            {"##??###??####?..???",  {14, 2}},
            {"???.#?????",           {1,  3}},
            {"??.?.???..?.",         {2,  1,  1,  1}},
            {".?#.??#?..???#???",    {1,  4,  3,  1}},
            {"??.??.?????????",      {1,  1,  3,  5}},
            {"#?##?????.??.#?????#", {9,  1,  2,  2, 1}},
            {"?#???.??.#????#?#??",  {5,  10}},
            {"???.?????..??.#.?.?.", {5,  1}},
            {"??#?.#?#?#",           {2,  5}},
            {"#?#????#??.??.##?",    {8,  2}},
            {".?.?.?#??##?.#.??#??", {1,  1,  7,  1, 1, 3}},
            {"????#?#??.?#???#",     {6,  6}},
            {"??.#?#??#?#???????",   {1,  1,  8,  3}},
            {"????.????#??#?",       {1,  1,  1,  6}},
            {"?.?.?##?##??#.??",     {1,  3,  2,  1, 2}},
            {".???.?#?##????",       {1,  7}},
            {"?#.?????#??.",         {1,  2}},
            {"?#.????.???#?#??#?#",  {1,  1,  1,  1, 9}},
            {"#?.#.??#???????.???.", {1,  1,  4,  2, 1, 3}},
            {"?#.???????.#?#?#",     {1,  1,  1,  1, 3}},
            {".??..##.??#??##?",     {2,  2,  2,  2}},
            {"?.?#?..##?.?..",       {1,  2}},
            {"?????#?.?????",        {1,  3,  3}},
            {"##??..?????#??",       {4,  1,  2}},
            {"#..?###????.?",        {1,  4,  1}},
            {"?#?#???????#??.",      {3,  7}},
            {"?#?.???#??.??.",       {1,  4,  2}},
            {"???#.#?##??.?##??##?", {4,  1,  4,  7}},
            {"???????#..?",          {4,  1,  1}},
            {"???#?????#??#?.?",     {2,  8}},
            {"..?#.??##???#?.?..",   {1,  9}},
            {"????##??.??",          {4,  2}},
            {"??##??#?..???##?#?#?", {6,  8}},
            {"?.##.?.???",           {2,  1}},
            {".??.????#?.",          {1,  5}},
            {"?#??.#?#????????#",    {3,  4,  3,  1}},
            {"??#.?.?..?",           {2,  1,  1}},
            {"#????????#???.##?#?.", {1,  6,  1,  5}},
            {"??.?#?.#??#???????",   {2,  4,  6}},
            {"??????#????",          {6,  1}},
            {"?????#??????##.??..",  {3,  6}},
            {"???????##???#??.#.??", {10, 2,  1,  1, 1}},
            {".????????????#???",    {1,  1,  10}},
            {"???????##???#?????",   {1,  1,  5,  4, 1}},
            {".??#.?#?.???.#.?#???", {3,  2,  1,  1, 4}},
            {"???..##???",           {2,  4}},
            {"??##???#.??.#?",       {8,  2,  1}},
            {".??.??.?##??..??#?",   {2,  5,  1,  1}},
            {"??.???????#??#??.??",  {1,  2,  8,  1}},
            {"..#?????#??.??#.",     {7,  2}},
            {"?#????#?#??#?",        {2,  3,  1,  2}},
            {"???#??#????#??#?.?",   {9,  1,  2,  1}},
            {"?.??.????.",           {2,  3}},
            {"?.???#????#.????#???", {1,  1,  1,  1, 1, 5}},
            {"?.?##?#.??.??#??",     {5,  1}},
            {"?#??###???#",          {7,  1}},
            {"#?????..???",          {3,  1,  3}},
            {"?.???..??##",          {2,  4}},
            {".?#????.?#.?.#",       {3,  2,  1,  1}},
            {"??#??#.#??????#?#???", {5,  2,  8}},
            {"??.???..???##.",       {2,  3,  1,  3}},
            {"???????#?#",           {1,  4}},
            {"??#?.?????#?#?#???.",  {2,  12}},
            {"??.?#???#?##.?#??",    {1,  8,  2,  1}},
            {"??????????..??",       {2,  1}},
            {"??????#?????",         {1,  5}},
            {"???.??###.?",          {4,  1}},
            {"???##????#??????",     {3,  1,  3,  3}},
            {"???.???#????",         {1,  5}},
            {"#???????.?#?#?#???",   {5,  1,  7,  1}},
            {"#??#???#????????.??",  {1,  1,  4,  1, 2, 1}},
            {".?#?..?????????#?.",   {2,  2,  6}},
            {"??..??.?..",           {1,  2}},
            {"????.#?????????###?.", {1,  2,  1,  12}},
            {"#?#?##??#.?.?.",       {9,  1}},
            {"????????#??#???",      {4,  7}},
            {"?#????#????",          {3,  4,  1}},
            {"??????#???",           {1,  2,  1}},
            {"#??#.??.?#",           {4,  1,  1}},
            {"?.?????#?#",           {1,  6}},
            {"#?#?.??#???????.??",   {1,  2,  1,  1, 4, 2}},
            {"?????????.????",       {2,  5,  3}},
            {"?#??##?.?#??##??#",    {1,  3,  5,  1}},
            {"??#?#.?#?..#??",       {3,  2,  1,  1}},
            {"??????#??.?",          {3,  1,  1}},
            {"?.?????#????..###??.", {6,  4}},
            {"?##??#????.??.",       {7,  1,  1}},
            {"#.?????????#",         {1,  1,  1,  1}},
            {".??#..#??.????",       {3,  3,  1}},
            {".????#?##?#????",      {7,  2}},
            {"???????#???#?",        {2,  1,  2,  2}},
            {"?..#?????#",           {1,  4,  1}},
            {"???.#?#..??#",         {1,  3,  1,  1}},
            {"???.#????#???????.?",  {1,  3,  2,  1, 1, 2}},
            {"#???.??#.??.?#???.",   {1,  1,  2,  1, 2, 1}},
            {"#?????.?.??????",      {1,  2,  1,  1, 5}},
            {"??????.???..#?#???",   {3,  1,  1,  3, 1}},
            {"??#????????#??#???",   {8,  3,  1,  1}},
            {"??.?#?#???##..?#??",   {2,  4,  1,  2, 2, 1}},
            {"??#???????..??",       {3,  5,  1}},
            {".???##?.???????.?",    {4,  4}},
            {"???#???????",          {3,  4}},
            {"#.???????#",           {1,  1,  1}},
            {"#?####..#?#",          {6,  3}},
            {".??#???.?????????..",  {5,  5,  3}},
            {"?????#.?????#?#.?#",   {1,  3,  4,  2}},
            {"?#????#.?#?#",         {1,  4,  2,  1}},
            {"??#???##???.#??????",  {9,  1,  1,  2}},
            {".?#???????",           {1,  2,  2}},
            {"????????###?????.",    {5,  4,  4}},
            {"?#?##??..#??",         {7,  3}},
            {"??#?.?????#??",        {2,  7}},
            {"..??.?...??.",         {1,  1,  2}},
            {"??.???#??.?#???",      {1,  2,  2,  2, 1}},
            {"???#?.????",           {4,  1}},
            {"???#??#??#?#?#?###?",  {1,  16}},
            {"??.????#?.#??..",      {1,  2,  2,  3}},
            {"???#??????##????",     {4,  6}},
            {"##?.??.?#??",          {2,  1,  2}},
            {"??.##?#?#?.?#??.",     {1,  7,  1}},
            {"??#?#??#??#????.?#?",  {1,  13, 2}},
            {"????###????.????.?#?", {9,  1,  1,  1, 3}},
            {"??#?#???#????????#.",  {1,  1,  1,  1, 1, 8}},
            {".#??#????.?####?",     {5,  5}},
            {"..#??##????",          {1,  7}},
            {".????#?#?#?#.#?#?#??", {9,  6}},
            {"?????..?????",         {1,  2}},
            {"???????#?#??#??.?#",   {1,  11, 2}},
            {".?.??????#???#?????",  {1,  1,  7,  1, 1}},
            {".???.??##?#?.",        {1,  6}},
            {".??#???.???????",      {2,  2,  1,  4}},
            {"#??..#??##?##????",    {3,  1,  2,  3, 1}},
            {".?#?#??#?#?#????",     {11, 1}},
            {"?#?#?????????.?#?#",   {5,  1,  2,  3}},
            {"?##???#????#?",        {8,  1}},
            {".##?????????..?",      {2,  1,  2,  1, 1}},
            {"???????????????????#", {3,  8,  1,  1, 2}},
            {"??##????..###.",       {5,  3}},
            {".?###??????#??",       {7,  2}},
            {"?.?..#??.#?#?.##",     {1,  1,  1,  3, 2}},
            {"???..???#.?????##??",  {2,  4,  2,  5}},
            {".???.?????.",          {1,  1}},
            {"?#????#???.??",        {2,  4,  1}},
            {"?.??#.??.??#",         {1,  1,  1,  1}},
            {"?#?????#??????.???",   {10, 1,  2}},
            {".????###??#???..?.?.", {10, 1,  1,  1}},
            {".???##?.????..?#???",  {5,  1,  1,  3, 1}},
            {"?##?#?????#??.?",      {2,  3,  4,  1}},
            {"???#??#??###?#",       {1,  1,  9}},
            {"?????.?#?#??????##",   {4,  2,  1,  1, 2, 2}},
            {".#???..???###?????",   {1,  1,  1,  5, 1}},
            {"?#?#???????#",         {1,  1,  4,  1}},
            {".?#???????#.#?.??.?",  {7,  1,  1,  1, 1}},
            {"??????#....#??#..#??", {5,  4,  3}},
            {"??????#?#???",         {1,  1,  2,  1}},
            {".####???#..#????#???", {8,  2,  3,  1}},
            {".#?#.????.?",          {3,  2}},
            {".#?????.#?####???",    {2,  1,  1,  7}},
            {"#????.?#??#?#..?",     {1,  2,  2,  3}},
            {"????..????",           {1,  4}},
            {".?###.?#??????.",      {4,  5,  1}},
            {".???#.???.?",          {2,  1,  1}},
            {"??????#?.?.?.?.???#.", {1,  1,  3,  1, 1, 4}},
            {"?#????..???..",        {2,  1,  3}},
            {"?.??#????.?##??",      {1,  6,  4}},
            {"?#?????.##??#?.",      {4,  6}},
            {"??##?????..#?",        {9,  1}},
            {"??.???..??#??#",       {3,  4}},
            {"??????..??#.",         {1,  1,  1,  2}},
            {"?#????.???.?",         {1,  1,  1,  1}},
            {"??????????#?#",        {1,  1,  8}},
            {"#.??#??#???.#???#?",   {1,  3,  1,  1, 5}},
            {"#.???????.??",         {1,  1,  4,  2}},
            {"?#..????.???.#??",     {2,  1,  1,  1, 3}},
            {"???.?.?#?#???.",       {1,  1,  3,  1}},
            {".#?#??????#??.?",      {7,  2}},
            {"????.?.?????",         {3,  1,  1,  1}},
            {"?.????#??##????",      {3,  6}},
            {"???????#??..",         {1,  1,  1}},
            {"???.??#?.????",        {2,  3,  1,  1}},
            {".????#?.?#.??.????",   {1,  1,  2,  2, 2, 1}},
            {"???#?#??..",           {1,  3}},
            {"#?#???????????",       {8,  3}},
            {".?##..#??????.##?",    {3,  7,  2}},
            {"????#.?####??#???",    {1,  1,  7,  1}},
            {"?##??#??#?##?#?##",    {6,  9}},
            {".????#??.???",         {7,  1}},
            {"???##?.#??#???.#.?",   {4,  7,  1}},
            {"???????#?????###?",    {1,  11}},
            {"????.???.?#.?",        {1,  1,  2}},
            {"???????#?##??#?#??#?", {1,  1,  1,  5, 7}},
            {"???.??##??####..",     {5,  4}},
            {"????????????.",        {2,  4,  2}},
            {"??????#???",           {1,  1}},
            {"?#.?????..",           {1,  1,  1}},
            {".???#??#??#?????.",    {1,  6,  1,  3}},
            {"#???.#?.#???",         {3,  2,  1,  1}},
            {"?.??#?#???.???????",   {3,  2}},
            {"?.????#?##?#?..?",     {1,  2,  7}},
            {"?#?????????.?#?.?",    {2,  1,  2,  3, 1}},
            {"#???????.?",           {4,  1,  1}},
            {"#???#.?#??",           {2,  1,  2}},
            {"?..????.###?????",     {1,  1,  7}},
            {".#?#???#???",          {5,  3}},
            {".#?.?????#?##?..#?#",  {1,  2,  1,  3, 1, 1}},
            {"??#??#?#???.???",      {8,  1,  3}},
            {".?#?#?#??#..??",       {6,  1,  1}},
            {"??#??.?#???",          {3,  2}},
            {"?????#?##??.??.",      {1,  6,  1}},
            {"??#?#???##",           {5,  2}},
            {"??????#????##???",     {1,  7}},
            {".?##?..??.",           {2,  2}},
            {"??#??#??.???????",     {5,  5}},
            {".?#?#??????.?",        {3,  2}},
            {"?#???###?..???",       {7,  1}},
            {"???????????",          {1,  2,  1}},
            {"??????#.#???.????",    {1,  3,  1,  1, 4}},
            {"??#..#?#?#?.??#?.",    {3,  1,  4,  1, 2}},
            {"?#?#??###?????.??",    {1,  9,  1}},
            {"???#??#??#?????",      {1,  5,  1,  1, 1}},
            {"?#???##???...?.?#?",   {9,  2}},
            {"??#???#???#?.?.#?.",   {2,  1,  6,  1, 2}},
            {"??.????..?.?",         {2,  1,  1,  1}},
            {"????????????",         {6,  2}},
            {"?.????#?#????#??#??",  {2,  1,  1,  1, 4, 1}},
            {".???????#??",          {1,  3}},
            {"??????#??#???#.?#?#?", {1,  1,  2,  6, 2, 2}},
            {"?#???.????.??.??",     {2,  3,  2,  1}},
            {"???##..??????#??",     {1,  2,  1,  5}},
            {"???????.?#??????#",    {6,  6,  1}},
            {"???????????",          {2,  4,  1}},
            {"??#.???#?#",           {1,  3}},
            {"???.??????",           {1,  6}},
            {"??#.????.?",           {1,  1,  1}},
            {"??????#?#..??####??",  {7,  1,  6}},
            {"..?..??????#?????",    {1,  1,  7,  1}},
            {"?????#.#?????#????#?", {6,  2,  7}},
            {"???.?????????",        {1,  6,  2}},
            {"#??##??#??##?.",       {1,  2,  2,  2}},
            {"?????????.?#??????",   {1,  1,  1,  5, 1}},
            {".??.??..?#??##?##",    {1,  1,  2,  2, 2}},
            {"??#?##???.?",          {4,  1}},
            {"???#??.?..???????...", {3,  5}},
            {"???.#?#?#.?",          {2,  3,  1}},
            {".?????#???####.#.??",  {1,  3,  4,  1, 1}},
            {"?#???#???.???",        {2,  1,  1,  1}},
            {"?????????.?",          {1,  4}},
            {"..??.??..???##?#??.?", {2,  2,  1,  6, 1}},
            {"#??#?#??#..?#??????",  {9,  3,  1}},
            {"??????.???#.????",     {1,  3,  4,  1, 1}},
            {"???#??????????",       {2,  1,  4}},
            {"???????##???#?#??#?.", {1,  13}},
            {"##????????",           {2,  1,  3}},
            {"#.#????##????#??#",    {1,  7,  4,  1}},
            {"???.??.???#?",         {1,  1,  3}},
            {".??????#.????????#??", {7,  1,  1,  1, 1, 1}},
            {"?..?#?????",           {3,  1}},
            {"?..?.#????#????#??",   {1,  1,  9,  1}},
            {"??.?.?.?#???#??",      {1,  1,  2,  1, 1}},
            {"?.????.???##?#?#?#??", {1,  11}},
            {"??????#???.#",         {2,  1,  3,  1}},
            {".?????????##?.",       {4,  5}},
            {"?.???????.???#??#.",   {3,  1,  5}},
            {"??#?#.???.?.???##??",  {4,  1,  1,  6}},
            {"?#?#???#?????.####??", {12, 6}},
            {"##????#????",          {3,  3}},
            {"??????###??",          {1,  5}},
            {"?.?#?#?????##?????",   {12, 2}},
            {"??#?.#.?.????#??#?.",  {1,  1,  2,  6}},
            {"???.???#?#???.?##",    {1,  1,  4,  1, 3}},
            {"?.??????????.????",    {1,  2,  4,  1, 2}},
            {"..?#??.?????",         {2,  2}},
            {"?#.??.?????#??#",      {1,  1,  1,  3, 2}},
            {"?##??.?#????#?#",      {4,  4,  3}},
            {"?..#??#???.#??#?",     {4,  5}},
            {"??.???????",           {1,  2}},
            {"?#??..#???????..??",   {2,  6,  2}},
            {".#????.????#?#?????",  {1,  1,  1,  8, 1}},
            {"#?#???#??#???#??????", {7,  9,  1}},
            {"?.##?#??.?",           {4,  1}},
            {"#?##?.????.##?..",     {4,  1,  3}},
            {".?#?.???##?.",         {3,  4}},
            {"#.???##?????.#.",      {1,  5,  3,  1}},
            {"?????#?#?#??.?#??.",   {10, 3}},
            {"?.?#..??.#??#???????", {1,  2,  1,  7, 1, 1}},
            {"#####??##???.???????", {10, 1,  1,  2, 1}},
            {"???.????##????#.##",   {2,  1,  9,  2}},
            {".#?.?..??#?#?..",      {2,  4}},
            {"##?#..?#??#?#",        {4,  6}},
            {"##?#???..#?#.?##",     {5,  1,  3,  2}},
            {"??#..#??##..",         {3,  1,  2}},
            {"??????.??.???.",       {1,  4,  1,  2}},
            {"?.????????#??#?#???",  {1,  1,  1,  1, 8}},
            {"#?##?????#???#.?????", {14, 1,  2}},
            {"??###.??????.?###??",  {4,  1,  1,  3, 1}},
            {"???????.???.",         {3,  2}},
            {"?#??##????.????.#.??", {2,  2,  1,  4, 1, 1}},
            {".#?????.??????",       {1,  3,  2,  3}},
            {"?##????.??",           {4,  2}},
            {"#.##.?????###????",    {1,  2,  9}},
            {"???##??#.?#?",         {4,  1,  1}},
            {"??##???#?????",        {3,  3}},
            {"?#???#?????.???#????", {10, 1,  1,  1}},
            {"?#??..#.?.#?",         {2,  1,  1,  2}},
            {"??????.??.##?#??",     {1,  1,  1,  2, 2}},
            {"??###????????.",       {5,  1}},
            {"????##???#.????",      {6,  1,  1,  1}},
            {".?.????##??",          {1,  1,  3}},
            {".#??.???..????#.???.", {2,  2,  2,  1, 3}},
            {"?????.???#?##???.",    {1,  1,  4,  2, 1}},
            {".??#?.??#???#.?",      {1,  2,  3,  1}},
            {"..????????????????",   {3,  4}},
            {"???#.?????.",          {4,  1}},
            {"?..????#???.??...?",   {1,  7,  2,  1}},
            {"???????#??#?#?",       {4,  6}},
            {".?#???.?##???#?.##",   {4,  7,  2}},
            {"#??.??#?.???.",        {3,  2}},
            {"???#???????#?.?#?",    {1,  1,  5,  2}},
            {"#.???###??.?##???#?",  {1,  1,  4,  7}},
            {"???#??.??????.??#..",  {4,  3}},
            {"????.#?#?##.##????",   {1,  6,  3}},
            {"?#.???????",           {1,  6}},
            {"#???##?#?..??????.??", {1,  7,  1,  1, 1, 1}},
            {"?????????.#?",         {1,  1,  1,  1}},
            {".?..?#?##??",          {5,  1}},
            {"..????????????",       {2,  8}},
            {"...??.?..?#?#?",       {1,  3}},
            {"??#??#???????.??",     {7,  1,  1}},
            {"????#.???#?###.??",    {5,  8}},
            {".????####??#??.?????", {11, 2}},
            {"?.??????????...??",    {1,  2,  1,  2, 1}},
            {"?.?##??????.?..#.",    {6,  1}},
            {"#??.?????????.?",      {3,  1,  3,  1}},
            {"???.#??#????.?.",      {2,  7}},
            {"???.#?.?.?#?#????",    {2,  1,  1,  2, 5}},
            {"??????.??##?.?.#?..?", {2,  4,  2}},
            {"?????#?????.????#?",   {11, 5}},
            {"?##.??????.??#?##??",  {3,  3,  1,  1, 4, 1}},
            {"???.??#????#??????",   {4,  5}},
            {"?.?.?.#?#??.???",      {1,  1,  5,  1}},
            {".?.??##???##.",        {6,  2}},
            {".?????.#?.",           {2,  1}},
            {"..???.?.???##?#??",    {1,  1,  1,  8}},
            {"??#??#??#??#?#?#?.",   {9,  6}},
            {"...????.????.????",    {1,  3}},
            {"?#???.??.##?#????",    {2,  1,  1,  7}},
            {".#?.??#???#???#??",    {2,  1,  5,  1, 3}},
            {"#???.#??#.",           {1,  1,  1}},
            {"#????????#?#??.#?.?",  {1,  1,  9,  1, 1}},
            {"????#???????#?",       {2,  3,  4}},
            {".????#?.???",          {6,  1}},
            {".??.???##?#..??",      {1,  5,  1}},
            {"?#?????#??#.???#??#",  {6,  2,  1,  1, 1, 2}},
            {".?????#?##..#??#",     {9,  1,  1}},
            {"?#???.??#.?????????",  {4,  1,  5}},
            {"???????#???#.?..???",  {5,  2,  1,  1, 2}},
            {".???##?.?#?",          {6,  2}},
            {"??#???#???#??????",    {3,  11}},
            {"????##??##.????#.?",   {9,  4,  1}},
    };

    decltype(input_real) input_test{
            {"???.###",             {1, 1, 3}},
            {".??..??...?##.",      {1, 1, 3}},
            {"?#?#?#?#?#?#?#?",     {1, 3, 1, 6}},
            {"????.#...#...",       {4, 1, 1}},
            {"????.######..#####.", {1, 6, 5}},
            {"?###????????",        {3, 2, 1}},
    };
//    auto &input = input_test;
    auto &input = input_real;


    std::vector<ll> get_groups(const std::string &s) {
        std::vector<ll> result;
        std::istringstream ss(s);
        std::string item;

        while (getline(ss, item, '.')) {
            if (!item.empty()) {
                result.push_back(item.size());
            }
        }

        return result;
    }

    std::string strip_dots(const std::string &s) {
        std::string_view sv = s;
        while (sv.starts_with('.')) {
            sv = sv.substr(1);
        }
        return std::string(sv);
    }

    using PoolWork = std::tuple<std::string, std::vector<ll>>;

    void print(const PoolWork &pair) {
        auto &[remaining_string, remaining_groups] = pair;
        std::cout << "'" << remaining_string << "' (";
        for (ll remaining_group: remaining_groups) {
            std::cout << remaining_group << " ";
        }
        std::cout << ")";
    }

    ll get_combination3(std::string s, const std::vector<ll> &expected) {

        const ll min_offset = expected.size() - 2;
        const ll group_len = std::accumulate(expected.begin(), expected.end(), 0ll);
        const ll remaining_len = s.length() - group_len - min_offset;

        ll result = 0;
        std::vector<ll> offsets(expected.size());
        auto validate_group = [&](ll nesting) {
            ll string_idx = 0;
            for (ll n = 0; n <= nesting; n++) {
                if (string_idx + offsets[n] > s.size()) {
                    return false;
                }
                for (ll n_offset = 0; n_offset < offsets[n]; n_offset++) {
                    char c = s[string_idx++];
                    if (c != '.' && c != '?') {
                        return false;
                    }
                }
                if (string_idx + expected[n] > s.size()) {
                    return false;
                }
                for (ll n_group = 0; n_group < expected[n]; n_group++) {
                    char c = s[string_idx++];
                    if (c != '#' && c != '?') {
                        return false;
                    }
                }
            }
            return true;
        };


#define BEGIN_LOOP(idx) for (offsets[(idx)] = (((idx) == 0)?0:1); offsets[(idx)] <= remaining_len;offsets[(idx)]++) { \
if (!validate_group((idx))) {                                                                                         \
  continue;                                                                                                                      \
}

#define END_LOOP(idx) }

        if (expected.size() == 6) {
            BEGIN_LOOP(0)
                BEGIN_LOOP(1)
                    BEGIN_LOOP(2)
                        BEGIN_LOOP(3)
                            BEGIN_LOOP(4)
                                BEGIN_LOOP(5)
                                    BEGIN_LOOP(6)
                                        result++;
                                    END_LOOP(6)
                                END_LOOP(5)
                            END_LOOP(4)
                        END_LOOP(3)
                    END_LOOP(2)
                END_LOOP(1)
            END_LOOP(0)
        } else if (expected.size() == 9) {
            BEGIN_LOOP(0)
                BEGIN_LOOP(1)
                    BEGIN_LOOP(2)
                        BEGIN_LOOP(3)
                            BEGIN_LOOP(4)
                                BEGIN_LOOP(5)
                                    BEGIN_LOOP(6)
                                        BEGIN_LOOP(7)
                                            BEGIN_LOOP(8)
                                                result++;
                                            END_LOOP(8)
                                        END_LOOP(7)
                                    END_LOOP(6)
                                END_LOOP(5)
                            END_LOOP(4)
                        END_LOOP(3)
                    END_LOOP(2)
                END_LOOP(1)
            END_LOOP(0)
        } else if (expected.size() == 10) {
            BEGIN_LOOP(0)
                BEGIN_LOOP(1)
                    BEGIN_LOOP(2)
                        BEGIN_LOOP(3)
                            BEGIN_LOOP(4)
                                BEGIN_LOOP(5)
                                    BEGIN_LOOP(6)
                                        BEGIN_LOOP(7)
                                            BEGIN_LOOP(8)
                                                BEGIN_LOOP(9)
                                                    result++;
                                                END_LOOP(9)
                                            END_LOOP(8)
                                        END_LOOP(7)
                                    END_LOOP(6)
                                END_LOOP(5)
                            END_LOOP(4)
                        END_LOOP(3)
                    END_LOOP(2)
                END_LOOP(1)
            END_LOOP(0)
        } else if (expected.size() == 12) {
            BEGIN_LOOP(0)
                BEGIN_LOOP(1)
                    BEGIN_LOOP(2)
                        BEGIN_LOOP(3)
                            BEGIN_LOOP(4)
                                BEGIN_LOOP(5)
                                    BEGIN_LOOP(6)
                                        BEGIN_LOOP(7)
                                            BEGIN_LOOP(8)
                                                BEGIN_LOOP(9)
                                                    BEGIN_LOOP(10)
                                                        BEGIN_LOOP(11)
                                                            result++;
                                                        END_LOOP(11)
                                                    END_LOOP(10)
                                                END_LOOP(9)
                                            END_LOOP(8)
                                        END_LOOP(7)
                                    END_LOOP(6)
                                END_LOOP(5)
                            END_LOOP(4)
                        END_LOOP(3)
                    END_LOOP(2)
                END_LOOP(1)
            END_LOOP(0)
        } else if (expected.size() == 15) {
            BEGIN_LOOP(0)
                BEGIN_LOOP(1)
                    BEGIN_LOOP(2)
                        BEGIN_LOOP(3)
                            BEGIN_LOOP(4)
                                BEGIN_LOOP(5)
                                    BEGIN_LOOP(6)
                                        BEGIN_LOOP(7)
                                            BEGIN_LOOP(8)
                                                BEGIN_LOOP(9)
                                                    BEGIN_LOOP(10)
                                                        BEGIN_LOOP(11)
                                                            BEGIN_LOOP(12)
                                                                BEGIN_LOOP(13)
                                                                    BEGIN_LOOP(14)
                                                                        result++;
                                                                    END_LOOP(14)
                                                                END_LOOP(13)
                                                            END_LOOP(12)
                                                        END_LOOP(11)
                                                    END_LOOP(10)
                                                END_LOOP(9)
                                            END_LOOP(8)
                                        END_LOOP(7)
                                    END_LOOP(6)
                                END_LOOP(5)
                            END_LOOP(4)
                        END_LOOP(3)
                    END_LOOP(2)
                END_LOOP(1)
            END_LOOP(0)
        } else if (expected.size() == 18) {
            BEGIN_LOOP(0)
                BEGIN_LOOP(1)
                    BEGIN_LOOP(2)
                        BEGIN_LOOP(3)
                            BEGIN_LOOP(4)
                                BEGIN_LOOP(5)
                                    BEGIN_LOOP(6)
                                        BEGIN_LOOP(7)
                                            BEGIN_LOOP(8)
                                                BEGIN_LOOP(9)
                                                    BEGIN_LOOP(10)
                                                        BEGIN_LOOP(11)
                                                            BEGIN_LOOP(12)
                                                                BEGIN_LOOP(13)
                                                                    BEGIN_LOOP(14)
                                                                        BEGIN_LOOP(15)
                                                                            BEGIN_LOOP(16)
                                                                                BEGIN_LOOP(17)
                                                                                    result++;
                                                                                END_LOOP(17)
                                                                            END_LOOP(16)
                                                                        END_LOOP(15)
                                                                    END_LOOP(14)
                                                                END_LOOP(13)
                                                            END_LOOP(12)
                                                        END_LOOP(11)
                                                    END_LOOP(10)
                                                END_LOOP(9)
                                            END_LOOP(8)
                                        END_LOOP(7)
                                    END_LOOP(6)
                                END_LOOP(5)
                            END_LOOP(4)
                        END_LOOP(3)
                    END_LOOP(2)
                END_LOOP(1)
            END_LOOP(0)
        } else if (expected.size() == 20) {
            BEGIN_LOOP(0)
                BEGIN_LOOP(1)
                    BEGIN_LOOP(2)
                        BEGIN_LOOP(3)
                            BEGIN_LOOP(4)
                                BEGIN_LOOP(5)
                                    BEGIN_LOOP(6)
                                        BEGIN_LOOP(7)
                                            BEGIN_LOOP(8)
                                                BEGIN_LOOP(9)
                                                    BEGIN_LOOP(10)
                                                        BEGIN_LOOP(11)
                                                            BEGIN_LOOP(12)
                                                                BEGIN_LOOP(13)
                                                                    BEGIN_LOOP(14)
                                                                        BEGIN_LOOP(15)
                                                                            BEGIN_LOOP(16)
                                                                                BEGIN_LOOP(17)
                                                                                    BEGIN_LOOP(18)
                                                                                        BEGIN_LOOP(19)
                                                                                            result++;
                                                                                        END_LOOP(19)
                                                                                    END_LOOP(18)
                                                                                END_LOOP(17)
                                                                            END_LOOP(16)
                                                                        END_LOOP(15)
                                                                    END_LOOP(14)
                                                                END_LOOP(13)
                                                            END_LOOP(12)
                                                        END_LOOP(11)
                                                    END_LOOP(10)
                                                END_LOOP(9)
                                            END_LOOP(8)
                                        END_LOOP(7)
                                    END_LOOP(6)
                                END_LOOP(5)
                            END_LOOP(4)
                        END_LOOP(3)
                    END_LOOP(2)
                END_LOOP(1)
            END_LOOP(0)
        } else if (expected.size() == 25) {
            BEGIN_LOOP(0)
                BEGIN_LOOP(1)
                    BEGIN_LOOP(2)
                        BEGIN_LOOP(3)
                            BEGIN_LOOP(4)
                                BEGIN_LOOP(5)
                                    BEGIN_LOOP(6)
                                        BEGIN_LOOP(7)
                                            BEGIN_LOOP(8)
                                                BEGIN_LOOP(9)
                                                    BEGIN_LOOP(10)
                                                        BEGIN_LOOP(11)
                                                            BEGIN_LOOP(12)
                                                                BEGIN_LOOP(13)
                                                                    BEGIN_LOOP(14)
                                                                        BEGIN_LOOP(15)
                                                                            BEGIN_LOOP(16)
                                                                                BEGIN_LOOP(17)
                                                                                    BEGIN_LOOP(18)
                                                                                        BEGIN_LOOP(19)
                                                                                            BEGIN_LOOP(20)
                                                                                                BEGIN_LOOP(21)
                                                                                                    BEGIN_LOOP(22)
                                                                                                        BEGIN_LOOP(23)
                                                                                                            BEGIN_LOOP(
                                                                                                                    24)
                                                                                                                result++;
                                                                                                            END_LOOP(24)
                                                                                                        END_LOOP(23)
                                                                                                    END_LOOP(22)
                                                                                                END_LOOP(21)
                                                                                            END_LOOP(20)
                                                                                        END_LOOP(19)
                                                                                    END_LOOP(18)
                                                                                END_LOOP(17)
                                                                            END_LOOP(16)
                                                                        END_LOOP(15)
                                                                    END_LOOP(14)
                                                                END_LOOP(13)
                                                            END_LOOP(12)
                                                        END_LOOP(11)
                                                    END_LOOP(10)
                                                END_LOOP(9)
                                            END_LOOP(8)
                                        END_LOOP(7)
                                    END_LOOP(6)
                                END_LOOP(5)
                            END_LOOP(4)
                        END_LOOP(3)
                    END_LOOP(2)
                END_LOOP(1)
            END_LOOP(0)
        } else if (expected.size() == 30) {
            BEGIN_LOOP(0)
                BEGIN_LOOP(1)
                    BEGIN_LOOP(2)
                        BEGIN_LOOP(3)
                            BEGIN_LOOP(4)
                                BEGIN_LOOP(5)
                                    BEGIN_LOOP(6)
                                        BEGIN_LOOP(7)
                                            BEGIN_LOOP(8)
                                                BEGIN_LOOP(9)
                                                    BEGIN_LOOP(10)
                                                        BEGIN_LOOP(11)
                                                            BEGIN_LOOP(12)
                                                                BEGIN_LOOP(13)
                                                                    BEGIN_LOOP(14)
                                                                        BEGIN_LOOP(15)
                                                                            BEGIN_LOOP(16)
                                                                                BEGIN_LOOP(17)
                                                                                    BEGIN_LOOP(18)
                                                                                        BEGIN_LOOP(19)
                                                                                            BEGIN_LOOP(20)
                                                                                                BEGIN_LOOP(21)
                                                                                                    BEGIN_LOOP(22)
                                                                                                        BEGIN_LOOP(23)
                                                                                                            BEGIN_LOOP(
                                                                                                                    24)
                                                                                                                BEGIN_LOOP(
                                                                                                                        25)
                                                                                                                    BEGIN_LOOP(
                                                                                                                            26)
                                                                                                                        BEGIN_LOOP(
                                                                                                                                27)
                                                                                                                            BEGIN_LOOP(
                                                                                                                                    28)
                                                                                                                                BEGIN_LOOP(
                                                                                                                                        29)
                                                                                                                                    result++;
                                                                                                                                END_LOOP(
                                                                                                                                        29)
                                                                                                                            END_LOOP(
                                                                                                                                    28)
                                                                                                                        END_LOOP(
                                                                                                                                27)
                                                                                                                    END_LOOP(
                                                                                                                            26)
                                                                                                                END_LOOP(
                                                                                                                        25)
                                                                                                            END_LOOP(24)
                                                                                                        END_LOOP(23)
                                                                                                    END_LOOP(22)
                                                                                                END_LOOP(21)
                                                                                            END_LOOP(20)
                                                                                        END_LOOP(19)
                                                                                    END_LOOP(18)
                                                                                END_LOOP(17)
                                                                            END_LOOP(16)
                                                                        END_LOOP(15)
                                                                    END_LOOP(14)
                                                                END_LOOP(13)
                                                            END_LOOP(12)
                                                        END_LOOP(11)
                                                    END_LOOP(10)
                                                END_LOOP(9)
                                            END_LOOP(8)
                                        END_LOOP(7)
                                    END_LOOP(6)
                                END_LOOP(5)
                            END_LOOP(4)
                        END_LOOP(3)
                    END_LOOP(2)
                END_LOOP(1)
            END_LOOP(0)
        } else {
            myprint(expected.size());
            assert(false);
        }


        myprint(result);
        return result;
    }

    std::map<PoolWork, ll> memory_remaining_to_combinations;

    ll get_combinations2(std::string remaining_string, std::vector<ll> remaining_groups) {
        ll counter = 0;
        auto process_new_item = [&counter](PoolWork new_item) {
            if (auto memory_it = memory_remaining_to_combinations.find(new_item); memory_it !=
                                                                                  memory_remaining_to_combinations.end()) {
                counter += memory_it->second;
            } else {
                auto calculated = get_combinations2(std::get<0>(new_item), std::get<1>(new_item));
                memory_remaining_to_combinations[new_item] = calculated;
                counter += calculated;
            }
        };

        if (remaining_groups.empty()) {
            if (remaining_string.empty() ||
                std::all_of(remaining_string.begin(), remaining_string.end(), [](char c) {
                    return c == '.' || c == '?';
                })) {
                counter++;
            }
            return counter;
        }

        if (remaining_string.size() < std::accumulate(remaining_groups.begin(), remaining_groups.end(), 0ll)) {
            return counter;
        }

        remaining_string = strip_dots(remaining_string);
        if (remaining_string.empty()) {
            return counter;
        }

        // if remaining string starts with ? - we cannot check the group matching
        // we build two substitutes
        if (remaining_string.starts_with('?')) {
            remaining_string.erase(remaining_string.begin());

            PoolWork first{"#" + remaining_string, remaining_groups};
            PoolWork second{remaining_string, remaining_groups};

            process_new_item(second);
            process_new_item(first);
            return counter;
        }

        // if remaining string starts with # - let's try to match the group
        auto first_remaining_group = remaining_groups.front();
        remaining_groups.erase(remaining_groups.begin());

        if (remaining_string.size() < first_remaining_group) {
            return counter;
        }

        bool matched = true;
        if ((remaining_string.size() == first_remaining_group) ||
            (remaining_string.size() > first_remaining_group &&
             (remaining_string.at(first_remaining_group) == '.') ||
             (remaining_string.at(first_remaining_group) == '?'))) {
            for (ll i = 0; i < first_remaining_group; i++) {
                if (remaining_string.at(i) != '#' && remaining_string.at(i) != '?') {
                    matched = false;
                    break;
                }
            }
        } else {
            matched = false;
        }

        if (matched) {
            PoolWork new_item;
            if (remaining_string.size() > first_remaining_group) {
                new_item = {strip_dots(remaining_string.substr(first_remaining_group + 1)), remaining_groups};
            } else {
                new_item = {strip_dots(remaining_string.substr(first_remaining_group)), remaining_groups};
            }
            process_new_item(new_item);
        }

        return counter;
    }

    ll get_combinations(std::string s, const std::vector<ll> &expected) {
        std::vector<ll> pos;
        ll counter = 0;
        for (ll p = 0; p < s.size(); p++) {
            if (s.at(p) == '?') {
                pos.push_back(p);
            }
        }

        assert(pos.size() < 64);
        ll combination = (1ULL << pos.size()) - 1;


        while (true) {
            for (ll i = 0; i < pos.size(); i++) {
                ll bit_value = ((combination >> i) & 1);
                if (bit_value == 0) {
                    s.at(pos.at(i)) = '.';
                } else {
                    s.at(pos.at(i)) = '#';
                }
            }

            auto groups = get_groups(s);
            if (groups == expected) {
                myprint(s);
                counter++;
            }

            if (combination == 0) {
                break;
            }

            combination--;
        }
        myprint(counter);
        return counter;
    }


}

int main12() {
    int64_t result1 = 0;
    int64_t result5 = 0;

    for (const auto &[line, groups]: input) {
        for (ll copies: {1, 5}) {
            auto total_line = line;
            for (ll i = 0; i < copies - 1; i++) {
                total_line += '?';
                total_line += line;
            }

            auto total_groups = groups;
            for (ll i = 0; i < copies - 1; i++) {
                total_groups.insert(total_groups.end(), groups.begin(), groups.end());
            }

            auto result = get_combinations2(total_line, total_groups);
            if (copies == 1) {
                result1 += result;
            } else if (copies == 5) {
                result5 += result;
            }
        }
    }

    ASSERT_EQ(result1, 7633);
    ASSERT_EQ(result5, 23903579139437);
    return 0;
}
